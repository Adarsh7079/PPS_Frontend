{"version":3,"file":"ej2-pdf.umd.min.js","sources":["../src/pdf/core/utils.js","../src/pdf/core/pdf-primitives.js","../src/pdf/core/enumerator.js","../src/pdf/core/graphics/pdf-template.js","../src/pdf/core/fonts/pdf-string-format.js","../src/pdf/core/fonts/pdf-font-metrics.js","../src/pdf/core/fonts/string-layouter.js","../src/pdf/core/fonts/ttf-table.js","../src/pdf/core/fonts/ttf-reader.js","../src/pdf/core/fonts/unicode-true-type-font.js","../src/pdf/core/graphics/rightToLeft/text-shape.js","../src/pdf/core/graphics/rightToLeft/bidirectional.js","../src/pdf/core/graphics/rightToLeft/text-renderer.js","../src/pdf/core/fonts/pdf-standard-font.js","../src/pdf/core/graphics/pdf-path.js","../src/pdf/core/form/field.js","../src/pdf/core/annotations/pdf-appearance.js","../src/pdf/core/annotations/annotation.js","../src/pdf/core/annotations/annotation-collection.js","../src/pdf/core/pdf-page.js","../src/pdf/core/graphics/pdf-stream-writer.js","../src/pdf/core/graphics/images/pdf-image.js","../src/pdf/core/graphics/pdf-graphics.js","../src/pdf/core/base-stream.js","../src/pdf/core/content-parser.js","../src/pdf/core/decode-stream.js","../src/pdf/core/decrypt-stream.js","../src/pdf/core/flate-stream.js","../src/pdf/core/pdf-catalog.js","../src/pdf/core/predictor-stream.js","../src/pdf/core/pdf-parser.js","../src/pdf/core/security/encryptor.js","../src/pdf/core/pdf-cross-reference.js","../src/pdf/core/form/form.js","../src/pdf/core/import-export/xml-writer.js","../src/pdf/core/import-export/xfdf-document.js","../src/pdf/core/import-export/json-document.js","../src/pdf/core/import-export/fdf-document.js","../src/pdf/core/pdf-outline.js","../src/pdf/core/import-export/xml-document.js","../src/pdf/core/pdf-file-structure.js","../src/pdf/core/pdf-document.js","../src/pdf/core/annotations/pdf-paddings.js","../src/pdf/core/graphics/images/image-decoder.js","../src/pdf/core/graphics/images/pdf-bitmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array\n */\nexport function _stringToBytes(value, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var bytes = [];\n    for (var i = 0; i < value.length; ++i) {\n        bytes.push(value.charCodeAt(i) & 0xff);\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {number[]} destination byte array.\n * @returns {number[]} Byte array\n */\nexport function _convertStringToBytes(value, destination) {\n    for (var i = 0; i < value.length; ++i) {\n        destination.push(value.charCodeAt(i) & 0xff);\n    }\n    return destination;\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes) {\n    var length = bytes.length;\n    var max = 8192;\n    if (length < max) {\n        return String.fromCharCode.apply(null, bytes);\n    }\n    var stringBuffer = [];\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return isDirect ? output : new Uint8Array(output);\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = '';\n    var currentChar = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        if (i % 3 === 0) {\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n        }\n        else if (i % 3 === 1) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n        }\n        else if (i % 3 === 2) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n        }\n    }\n    if (bytes.length % 3 === 1) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n    }\n    if (bytes.length % 3 === 2) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n    }\n    return output;\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = '';\n    switch (style) {\n        case PdfFontStyle.regular:\n            value = 'Regular';\n            break;\n        case PdfFontStyle.bold:\n            value = 'Bold';\n            break;\n        case PdfFontStyle.italic:\n            value = 'Italic';\n            break;\n        case PdfFontStyle.underline:\n            value = 'Underline';\n            break;\n        case PdfFontStyle.strikeout:\n            value = 'Strikeout';\n            break;\n        default:\n            value = 'Regular';\n            break;\n    }\n    return value;\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            this._size = [value[2], value[3]];\n            this._content = new _PdfContentStream([]);\n            this._content.dictionary._crossReference = this._crossReference;\n            this._initialize();\n            this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template.\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines == null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs != null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs != null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this._calculateStyle(style);\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._calculateStyle = function (style) {\n        var iStyle = this._fontInternal._ttfMetrics._macStyle;\n        if ((style & PdfFontStyle.underline) !== 0) {\n            iStyle |= PdfFontStyle.underline;\n        }\n        if ((style & PdfFontStyle.strikeout) !== 0) {\n            iStyle |= PdfFontStyle.strikeout;\n        }\n        this.style = iStyle;\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n        }\n        metrics._name = fontFamily.toString();\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode } from './../enumerator';\nvar _PdfPath = /** @class */ (function () {\n    function _PdfPath() {\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._points = [];\n        this._pathTypes = [];\n        this._isStart = true;\n    }\n    Object.defineProperty(_PdfPath.prototype, \"_lastPoint\", {\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[(count - 1)][0];\n                value[1] = this._points[(count - 1)][0];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfPath.prototype._addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], _PathPointType.line);\n    };\n    _PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], _PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this._addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    _PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i++) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, _PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this._lastPoint[0] || point[1] !== this._lastPoint[1])) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n                else if (point[0] !== this._lastPoint[0] && point[1] !== this._lastPoint[1]) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n            i++;\n        }\n    };\n    _PdfPath.prototype._addPoint = function (points, type) {\n        this._points.push(points);\n        this._pathTypes.push(type);\n    };\n    _PdfPath.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, _PathPointType.bezier);\n        }\n    };\n    _PdfPath.prototype._addRectangle = function (x, y, width, height) {\n        this._startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this._startFigure();\n        this._addPoints(newPoints, _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addEllipse = function (x, y, width, height) {\n        this._startFigure();\n        this._addArc(x, y, width, height, 0, 360);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this._addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    _PdfPath.prototype._addBezier = function (x, y, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [];\n        points.push(x);\n        points.push(y);\n        points.push(firstX);\n        points.push(firstY);\n        points.push(secondX);\n        points.push(secondY);\n        points.push(endX);\n        points.push(endY);\n        this._addPoints(points, _PathPointType.bezier);\n    };\n    _PdfPath.prototype._closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= _PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this._closeFigure(this._points.length - 1);\n            }\n            this._startFigure();\n        }\n    };\n    _PdfPath.prototype._startFigure = function () {\n        this._isStart = true;\n    };\n    _PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return _PdfPath;\n}());\nexport { _PdfPath };\nexport var _PathPointType;\n(function (_PathPointType) {\n    _PathPointType[_PathPointType[\"start\"] = 0] = \"start\";\n    _PathPointType[_PathPointType[\"line\"] = 1] = \"line\";\n    _PathPointType[_PathPointType[\"bezier\"] = 3] = \"bezier\";\n    _PathPointType[_PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    _PathPointType[_PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    _PathPointType[_PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    _PathPointType[_PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(_PathPointType || (_PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        value = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n            return value;\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDict = this._mkDictionary;\n                if (typeof mkDict === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDict.has('BC') || _parseColor(mkDict.getArray('BC')) !== value) {\n                    mkDict.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var annots;\n            if (this.page._pageDictionary.has('Annots')) {\n                annots = this.page._pageDictionary.get('Annots');\n            }\n            if (this._kids && this._kids.length > 0) {\n                for (var i = 0; i < this._kids.length; i++) {\n                    var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                    if (reference) {\n                        if (this.page._pageDictionary.has('Annots')) {\n                            if (annots) {\n                                var index1 = annots.indexOf(reference);\n                                if (index1 !== -1) {\n                                    return index1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                if (this._ref) {\n                    if (annots) {\n                        var index1 = annots.indexOf(this._ref);\n                        if (index1 !== -1) {\n                            return index1;\n                        }\n                    }\n                }\n            }\n            return -1;\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            var page = this.page;\n            if (page && (this.form._tabOrder === PdfFormFieldsTabOrder.manual || page.tabOrder === PdfFormFieldsTabOrder.manual)) {\n                if (page._pageDictionary.has('Annots')) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    var index = annots.indexOf(this._ref);\n                    if (index < 0) {\n                        index = this._annotationIndex;\n                    }\n                    var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                    page._pageDictionary.update('Annots', annotations);\n                    page._pageDictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    bounds[2] - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        var currentIndex = this._kidsCount;\n        item._index = currentIndex;\n        this._kids.push(item._ref);\n        this._parsedItems.set(currentIndex, item);\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics._drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = text;\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = text;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics._drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        format.alignment = PdfTextAlignment.center;\n                        this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = parameter.bounds;\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        var x = rectangle[1];\n                        var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics._drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (isPressed) {\n            this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        else {\n            this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, this);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update('Yes', normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update('Yes', pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, this);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update(item.value, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(item.value, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var width = itemFont.measureString(options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var text = options[values[0]][1];\n                var textSize = itemFont.measureString(text, [0, 0], format, 0, 0);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont._size = i;\n                        var size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont._size = fontSize;\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                for (var i = 0; i < options.length; i++) {\n                    if (typeof index !== 'undefined' && index !== null) {\n                        this._listValues[Number.parseInt(i.toString(), 10)] = options[Number.parseInt(i.toString(), 10)][1];\n                        if (i === index) {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            this._selectedIndex = i;\n                        }\n                        else {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                        }\n                    }\n                    else {\n                        this.itemAt(i)._text = '';\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (!this._isLoaded && (isFlatten || needAppearance)) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics._drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics._drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics._drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics._drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        if (typeof bounds !== 'undefined') {\n            this._bounds = bounds;\n        }\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && (this._dictionary.has('Border') || (width || vRadius || hRadius))) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                var hasKey = false;\n                if (this._dictionary.has('Subj')) {\n                    this._dictionary.update('Subj', value);\n                    this._subject = value;\n                    hasKey = true;\n                }\n                if (!hasKey || this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                    this._subject = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary.has('Rotate')) {\n            angle = this._dictionary.get('Rotate');\n        }\n        else if (this._dictionary.has('Rotation')) {\n            angle = this._dictionary.get('Rotation');\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = linePoints.length;\n        var x = [];\n        var y = [];\n        if (linePoints && count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) || (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics._drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._removeAnnotationFromPage(this._page, this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this._type === _PdfAnnotationType.lineAnnotation && !this._dictionary.has('AP')) {\n            currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                this.bounds.width, this.bounds.height]);\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox')) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox')) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(scaleX === 1 && scaleY === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            graphics._drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._removeAnnotationFromPage(this._page, this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotationFromPage = function (page, annotation) {\n        var annotations = [];\n        if (page._pageDictionary && page._pageDictionary.has('Annots')) {\n            annotations = page._pageDictionary.get('Annots');\n        }\n        annotation._dictionary.set('P', page._ref);\n        var index = annotations.indexOf(annotation._ref);\n        if (index !== -1) {\n            annotations.splice(index, 1);\n            if (this._crossReference._cacheMap.has(annotation._ref)) {\n                this._crossReference._cacheMap.delete(annotation._ref);\n            }\n        }\n        page._pageDictionary.set('Annots', annotations);\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            this._removeAnnotationFromPage(page, annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint = points[points.length - 1];\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path._closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (brush !== null) {\n            graphics._drawPath(pdfpath, null, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path._closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics._drawPath(pdfpath, pen, null);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        for (var i = 0; i < points.length; i++) {\n            var first = points[Number.parseInt(i.toString(), 10)];\n            var second = points[(i + 1) % points.length];\n            sum += (second[0] - first[0]) * (second[1] + first[1]);\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        var radius = intensity * 4.25;\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new _PdfPath();\n            graphicsPath._addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(startPoint, (angle + 60), count);\n                second = this._getAxisValue(startPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = collection[Number.parseInt(i.toString(), 10)];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = void 0;\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new _PdfPath();\n            path._addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        clientSize = _page.size;\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._removeAnnotationFromPage(this._page, this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._removeAnnotationFromPage(this._page, this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            var cropBox = this._page.cropBox;\n            if (cropBox && _areNotEqual(cropBox, [0, 0, 0, 0])) {\n                cropBoxOrMediaBox = cropBox;\n            }\n            else {\n                var mBox = this._page.mediaBox;\n                if (mBox && _areNotEqual(mBox, [0, 0, 0, 0])) {\n                    cropBoxOrMediaBox = mBox;\n                }\n            }\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            var boundsArray = this._obtainLineBounds();\n            var bounds = { x: boundsArray[0],\n                y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n            this._bounds = bounds;\n            var updatedBounds = [this._bounds.x,\n                this._bounds.y,\n                this._bounds.x + this._bounds.width,\n                this._bounds.y + this._bounds.height];\n            this._dictionary.update('Rect', updatedBounds);\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, this._getRotationAngle());\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush = new PdfBrush(typeof this.innerColor !== 'undefined' ? this._innerColor : [0, 0, 0]);\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var size = this._page.size;\n            var rect1 = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            if (this._isBounds) {\n                nativeRectangle = rect1;\n            }\n            this._dictionary.update('Rect', [rect1[0], rect1[1], rect1[0] + rect1[2], rect1[1] + rect1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics._drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            array[array.length] = this._points[0];\n            array[array.length] = this._points[1];\n        }\n        this._points = array;\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new _PdfPath();\n                    graphicsPath._addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new _PdfPath();\n                graphicsPath._addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points !== null) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new _PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics._drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new _PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics._drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new _PdfPath();\n        graphicspath._addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new _PdfPath())._addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new _PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        path._addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        graphics._drawPath(path, pen);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                _setMatrix(template, this._getRotationAngle());\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    var p1 = [];\n                    var p2 = [];\n                    var value = this._getControlPoints(point, p1, p2);\n                    p1 = value.controlP1;\n                    p2 = value.controlP2;\n                    var index = 0;\n                    for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                        pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                        index++;\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new _PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1._addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            if (this._isLoaded) {\n                                borderPen._lineCap = PdfLineCap.round;\n                            }\n                            graphics._drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics._drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n            this._isModified = false;\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n            });\n        }\n        return this._getInkBoundsValue();\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics._drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var template;\n        if (this._dictionary.has('Name')) {\n            if (this._dictionary.get('Name').name === 'Comment') {\n                if (this._dictionary.has('Rect')) {\n                    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                    template = new PdfTemplate(nativeRectangle, this._crossReference);\n                    _setMatrix(template, this._getRotationAngle());\n                    var graphics = template.graphics;\n                    var rectValue = this._dictionary.getArray('Rect');\n                    if (rectValue !== null) {\n                        var pen = new PdfPen([0, 0, 0], 0.3);\n                        var brush = new PdfBrush(this.color);\n                        var pen1 = new PdfPen([255, 255, 255], 1);\n                        var points = new Array();\n                        points.push([6, 8]);\n                        points.push([9, 8]);\n                        points.push([4, 12]);\n                        var path = new _PdfPath();\n                        if (this.color[0] === 0 && this.color[0] === 0 && this.color[0] === 0) {\n                            brush = new PdfBrush([255, 215, 0]);\n                        }\n                        graphics.save();\n                        var template_1 = new PdfTemplate([0, 0, 15, 14], this._crossReference);\n                        template_1.graphics.drawRectangle(0, 0, 15, 14, pen, brush);\n                        template_1.graphics.drawPolygon(points, pen, new PdfBrush([255, 255, 255]));\n                        path._addEllipse(2, 2, 11, 8);\n                        template_1.graphics._drawPath(path, pen, new PdfBrush([255, 255, 255]));\n                        template_1.graphics.drawArc(2, 2, 11, 8, 108, 12.7, pen1);\n                        template_1.graphics.drawLine(pen, 4, 12, 6.5, 10);\n                        graphics._drawTemplate(template_1, { x: 0, y: 0, width: this.bounds.width, height: this.bounds.height });\n                        graphics.restore();\n                    }\n                }\n            }\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== null) {\n                this._destination = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                var page = this._crossReference._document.getPage(index);\n                if (array[1] instanceof _PdfName) {\n                    var mode = array[1];\n                    if (mode) {\n                        if (mode.name === 'XYZ') {\n                            var left = array[2];\n                            var top_4 = array[3];\n                            var zoom = array[4];\n                            var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                            var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                            this._destination = new PdfDestination(page, [leftValue, topValue]);\n                            if (typeof zoom !== 'undefined' && zoom !== null) {\n                                this._destination.zoom = zoom;\n                            }\n                            if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                || (typeof zoom === 'undefined' && zoom === null)) {\n                                this._destination._setValidation(false);\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n            _this._boundsCollection.push([_this.bounds.x, _this.bounds.y, _this.bounds.width, _this.bounds.height]);\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (this._boundsCollection.length > 0) {\n                    this._quadPoints = new Array(8 + (value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var size = this._page.size;\n        this._setQuadPoints(size);\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new _PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new _PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics._drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics._drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    this._dictionary.update('Rect', [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height]);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new _PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var noofRect = this._quadPoints.length / 8;\n        for (var i = 0; i < noofRect; i++) {\n            var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n            var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n            textQuadLocation[0 + (i * 8)] = locationX;\n            textQuadLocation[1 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[3 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[4 + (i * 8)] = locationX;\n            textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] - this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n            textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createRubberStampAppearance();\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.width, bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        var isStamp = false;\n                        if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                            var isRotated = false;\n                            var size = void 0;\n                            var rect = void 0;\n                            if (appearanceStream) {\n                                isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                                    this.rotateAngle === PdfRotationAngle.angle0);\n                                if (!isRotated) {\n                                    isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                        this.rotateAngle === PdfRotationAngle.angle0);\n                                }\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            isStamp = true;\n                            isTransformBBox = isRotated ? true : false;\n                            if (isTransformBBox) {\n                                var matrix = appearanceStream.dictionary.getArray('Matrix');\n                                if (matrix) {\n                                    var mMatrix = [];\n                                    for (var i = 0; i < matrix.length; i++) {\n                                        var value = matrix[Number.parseInt(i.toString(), 10)];\n                                        mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                                    }\n                                    var bounds = appearanceStream.dictionary.getArray('BBox');\n                                    if (bounds && bounds.length > 3) {\n                                        rect = _toRectangle(bounds);\n                                        var rectangle = this._transformBBox(rect, mMatrix);\n                                        size = [rectangle[2], rectangle[3]];\n                                        this._appearanceTemplate._size = size;\n                                    }\n                                    else {\n                                        size = [rect.width, rect.height];\n                                    }\n                                }\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                        if (!isStamp) {\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this._icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        var size = this._page.size;\n        var rectangle = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n        rectangle[1] = size[1] - (this.bounds.y + this.bounds.height);\n        this._dictionary.set('Rect', [rectangle[0], rectangle[1], rectangle[0] + rectangle[2], rectangle[1] + rectangle[3]]);\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._lineEndingStyle = this._obtainLineEndingStyle();\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    //Need to code\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                var ds = 'font:' +\n                    this.font._metrics._postScriptName +\n                    ' ' +\n                    this.font._size +\n                    'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n                    ';color:' +\n                    this._colorToHex(value);\n                this._dictionary.update('DS', ds);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._updateCropBoxValues();\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._updateCropBoxValues = function () {\n        if (this._page) {\n            var cropOrMediaBox = void 0;\n            if (this._page._pageDictionary.has('CropBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('CropBox');\n            }\n            else if (this._page._pageDictionary.has('MediaBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('MediaBox');\n            }\n            if (cropOrMediaBox) {\n                this._cropBoxValueX = cropOrMediaBox[0];\n                this._cropBoxValueY = cropOrMediaBox[1];\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics._drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            //Parse XML data\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0] - rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, parameter.bounds, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new _PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path._addRectangle(this.bounds.x - 2, (this._page.size[1] - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x, (this._page.size[1] - (this.bounds.y + this.bounds.height)), this.bounds.width, this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0],\n                    size[1] - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0],\n            pageHeight - this.calloutLines[1][1],\n            this.calloutLines[0][0],\n            pageHeight - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        if (this._dictionary.has('Contents')) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC')) {\n            //this._parseXMLData();\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            //Need to add\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new _PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics._drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        this._dictionary.update('Contents', this.text);\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        var ds = 'font:' +\n            this.font._metrics._postScriptName +\n            ' ' +\n            this.font._size +\n            'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n            ';color:' +\n            this._colorToHex(this.textMarkUpColor);\n        this._dictionary.update('DS', ds);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\"><p dir=\"ltr\">';\n        this._dictionary.update('RC', body + (this.text ? this._getXmlFormattedString(this.text) : '') + '</p></body>');\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                _removeDuplicateReference(appearance, this._crossReference, 'N');\n                _removeDuplicateReference(appearance, this._crossReference, 'R');\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.middle);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, 0, 0];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined') {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    var bcArray = mkDict.getArray('BC');\n                    if (bcArray) {\n                        this._borderColor = _parseColor(bcArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics._drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics._drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        this._annotations = array;\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation._ref) {\n            var index = this._annotations.indexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('Subtype')) {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('A')) {\n            var remote = dictionary.get('A');\n            if (remote && remote.has('S')) {\n                var link = remote.get('S');\n                if (link && link.name === 'GoToR' && remote.has('F')) {\n                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                }\n                else if (link && link.name === 'URI') {\n                    annot = PdfUriAnnotation._load(this._page, dictionary);\n                }\n            }\n        }\n        else {\n            annot = PdfUriAnnotation._load(this._page, dictionary);\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        this._annotation = annotation;\n        this._isReview = isReview;\n        if (this._annotation._isLoaded || typeof annotation._page !== 'undefined') {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection = this._page.annotations;\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection = this._page.annotations;\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (annots && Array.isArray(annots)) {\n                        var widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = this.mediaBox;\n                var width = 0;\n                var height = 0;\n                if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                if (height < 0) {\n                    height = -height;\n                }\n                if (width < 0) {\n                    width = -width;\n                }\n                this._size = [width, height];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n            return (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            annots = this._getProperty('Annots');\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        var rotation = this.rotation;\n        if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n            var rotate = void 0;\n            if (this._pageDictionary.has('Rotate')) {\n                rotate = this._pageDictionary.get('Rotate');\n            }\n            else {\n                rotate = rotation * 90;\n            }\n            var clip = this._g._clipBounds;\n            if (rotate === 90) {\n                this._g.translateTransform(0, size[1]);\n                this._g.rotateTransform(-90);\n                this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n            }\n            else if (rotate === 180) {\n                this._g.translateTransform(size[0], size[1]);\n                this._g.rotateTransform(-180);\n            }\n            else if (rotate === 270) {\n                this._g.translateTransform(size[0], 0);\n                this._g.rotateTransform(-270);\n                this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n            }\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary.has('CropBox')) {\n            box = this._pageDictionary.getArray('CropBox');\n        }\n        else if (this._pageDictionary.has('MediaBox')) {\n            box = this._pageDictionary.getArray('MediaBox');\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (annots && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        var element = this._page._pageDictionary;\n        if (typeof element !== 'undefined' && element !== null) {\n            this._array.push(this._page._ref);\n        }\n        switch (this._destinationMode) {\n            case PdfDestinationMode.location:\n                this._array.push(_PdfName.get('XYZ'));\n                if (typeof page !== 'undefined' && page !== null) {\n                    this._array.push(this._location[0]);\n                    this._array.push(this._page.graphics._size[1] - this._location[1]);\n                }\n                else {\n                    this._array.push(0);\n                    this._array.push(0);\n                }\n                this._array.push(this._zoom);\n                break;\n            case PdfDestinationMode.fitToPage:\n                this._array.push(_PdfName.get('Fit'));\n                break;\n            case PdfDestinationMode.fitR:\n                this._array.push(_PdfName.get('FitR'));\n                this._array.push(this._destinationBounds[0]);\n                this._array.push(this._destinationBounds[1]);\n                this._array.push(this._destinationBounds[2]);\n                this._array.push(this._destinationBounds[3]);\n                break;\n            case PdfDestinationMode.fitH:\n                this._array.push(_PdfName.get('FitH'));\n                this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                break;\n        }\n        if (this._parent) {\n            this._parent._dictionary.set('D', this._array);\n            this._parent._dictionary._updated = true;\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _escapePdfName } from './../utils';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, forStroking) {\n        this._stream.write(\"/\" + value + \" \");\n        this._writeOperator(forStroking ? 'CS' : 'cs');\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode } from './../enumerator';\nimport { PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { _PdfPath, _PathPointType } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj instanceof _PdfReference) {\n                this._hasResourceReference = true;\n                this._resourceObject = xref._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                this._resourceObject = obj;\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(pen, brush);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var pen = void 0;\n            var brush = void 0;\n            if (first instanceof PdfPen) {\n                pen = first;\n                if (second) {\n                    brush = second;\n                }\n            }\n            else {\n                brush = first;\n            }\n            this._stateControl(pen, brush);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} startAngle value.\n     * @param {number} sweepAngle value.\n     * @param {PdfPen} pen value.\n     * @returns {void} draw a arc.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw arc on the page graphics.\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var ref;\n        if (image._reference) {\n            ref = image._reference;\n        }\n        else {\n            ref = crossReference._getNextReference();\n            image._reference = ref;\n        }\n        if (!crossReference._cacheMap.has(ref)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(ref, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n            }\n        }\n        source.update(keyName.name, ref);\n        this._resources.set(ref, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._drawTemplate = function (template, bounds) {\n        var _this = this;\n        var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n        var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n        var needScale = !(scaleX === 1 && scaleY === 1);\n        var cropBox;\n        var mediaBox;\n        if (this._page) {\n            cropBox = this._page.cropBox;\n            mediaBox = this._page.mediaBox;\n            if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                    this.translateTransform(cropBox[0], -cropBox[1]);\n                    bounds.x = -cropBox[0];\n                    bounds.y = cropBox[1];\n                }\n            }\n        }\n        var state = this.save();\n        var matrix = new _PdfTransformationMatrix();\n        if (this._page) {\n            var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n            matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n        }\n        else {\n            matrix._translate(bounds.x, -(bounds.y + bounds.height));\n        }\n        if (needScale) {\n            if (template._isAnnotationTemplate && template._needScale) {\n                var scaleApplied = false;\n                if (template._content && template._content.dictionary) {\n                    var dictionary = template._content.dictionary;\n                    if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                        var templateMatrix = dictionary.getArray('Matrix');\n                        var templateBox = dictionary.getArray('BBox');\n                        if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                            var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                            var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                            var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                            var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                            if (roundScaleX === templateScaleX &&\n                                roundScaleY === templateScaleY &&\n                                templateBox[2] === template._size[0] &&\n                                templateBox[3] === template._size[1]) {\n                                matrix = new _PdfTransformationMatrix();\n                                matrix._translate(bounds.x - templateMatrix[4], bounds.y + templateMatrix[5]);\n                                matrix._scale(1, 1);\n                                scaleApplied = true;\n                            }\n                        }\n                    }\n                }\n                if (!scaleApplied) {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            else {\n                matrix._scale(scaleX, scaleY);\n            }\n        }\n        this._sw._modifyCtm(matrix);\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        if (this._resourceObject.has('XObject')) {\n            var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n            if (obj instanceof _PdfReference) {\n                isReference = true;\n                sourceDictionary = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                sourceDictionary = obj;\n            }\n            if (sourceDictionary) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (key && key instanceof _PdfReference) {\n                        var base = _this._crossReference._fetch(key);\n                        if (base && template && base === template._content) {\n                            keyName = value;\n                            ref = key;\n                        }\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('XObject', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (template && template._content.reference) {\n                ref = template._content.reference;\n            }\n            else {\n                ref = this._crossReference._getNextReference();\n            }\n            if (!this._crossReference._cacheMap.has(ref)) {\n                if (template && template._content) {\n                    this._crossReference._cacheMap.set(ref, template._content);\n                }\n            }\n            sourceDictionary.update(keyName.name, ref);\n            this._resources.set(ref, keyName);\n            this._resourceObject._updated = true;\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._executeObject(keyName);\n        this.restore(state);\n        _addProcSet('ImageB', this._resourceObject);\n        _addProcSet('ImageC', this._resourceObject);\n        _addProcSet('ImageI', this._resourceObject);\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._drawPath = function (path, pen, brush) {\n        if (pen || brush) {\n            this._stateControl(pen, brush, null);\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(pen, brush, path._fillMode, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} radius value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @returns {void} draw a rounded rectangle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Create a new brush.\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * //Draw rounded rectangle on the page graphics.\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new _PdfPath();\n        if (radius === 0) {\n            path._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this._drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path._closeFigure();\n            this._drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(pattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value draw string.\n     * @param {PdfFont} font value.\n     * @param {number[]} bounds value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @param {PdfStringFormat} format value.\n     * @returns {void} draw a string.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font.\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics.\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case _PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case _PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case _PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & _PathPointType.closePath) === _PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== _PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var fontDict;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (typeof fontDict !== 'undefined' && fontDict !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (key !== null && typeof key !== 'undefined') {\n                        var dictionary = _this._crossReference._fetch(key);\n                        if (dictionary && dictionary === font._dictionary) {\n                            keyName = value;\n                            ref = key;\n                        }\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', fontDict);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                ref = this._crossReference._getNextReference();\n            }\n            if (font._dictionary) {\n                this._crossReference._cacheMap.set(ref, font._dictionary);\n                fontDict.update(keyName.name, ref);\n                this._resources.set(ref, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                }\n                fontDict.update(keyName.name, ref);\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                verticalAlignShift);\n            this._sw._modifyTM(matrix);\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex < pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        if (pen != null && brush != null) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 ||\n            format.alignment === PdfTextAlignment.justify));\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format != null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.justify));\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draw line on the page graphics.\n     *\n     * @param {PdfPen} pen pen value.\n     * @param {number} x1 value.\n     * @param {number} y1 value.\n     * @param {number} x2 value.\n     * @param {number} y2 value.\n     * @returns {void} draw a line.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw line on the page graphics.\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} scale transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics scale transform.\n     * graphics.scaleTransform(0.5, 0.5);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} translate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees\n     * @returns {void} rotate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics rotate transform.\n     * graphics.rotateTransform(-90);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region.\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} clipping region.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set clip.\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Represents a transparency of this graphics.\n     *\n     * @param {number} stroke transparency value.\n     * @param {number} fill transparency value.\n     * @param {PdfBlendMode} mode blend mode.\n     * @returns {void} transparency of this graphics.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set transparency.\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary.has('CA')) {\n            stroke = dictionary.get('CA');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('BM')) {\n            mode = _mapBlendMode(dictionary.get('BM'));\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics\n * let state: PdfGraphicsState = graphics.save();\n * //Set graphics translate transform.\n * graphics.translateTransform(100, 100);\n * //Draws the String.\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * //Restore the graphics.\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = this.getBytes();\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        _this._bytes = bytes;\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (cipherTransform) {\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    return this.makeInlineImage(cipherTransform);\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        array.push(this.getObject(cipherTransform));\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        dictionary.set(key, this.getObject(cipherTransform));\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            return this.makeStream(dictionary, cipherTransform);\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            dictionary.set(key, this.getObject(cipherTransform));\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (cipherTransform) {\n            stream = cipherTransform.createStream(stream, length);\n        }\n        stream = this.filter(stream, dictionary, length);\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O')).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U')).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'));\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'));\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'));\n            var userEncryption = _stringToBytes(dictionary.get('UE'));\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        return _bytesToString(this._stringCipher._decryptBlock(_stringToBytes(s), true));\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        this._nextReferenceNumber = trailerDictionary.get('Size');\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, suppressEncryption) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !suppressEncryption) {\n            entry = parser.getObject(this._encrypt._createCipherTransform(reference.objectNumber, reference.generationNumber));\n        }\n        else {\n            entry = parser.getObject();\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var _this = this;\n        var currentLength = this._stream.length;\n        var buffer = [this._newLine.charCodeAt(0), this._newLine.charCodeAt(1), 37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        var updatedCount = 0;\n        var uncompressedCount = 0;\n        if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            var data = [];\n            var updatedStream_1 = [];\n            var archiveXRef_1 = '';\n            var indexes_1 = [];\n            indexes_1.push(0, 1);\n            var collection_1 = [];\n            var uncompressedOffsets_1 = [];\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    indexes_1.push(key.objectNumber, 1);\n                    uncompressedOffsets_1.push(currentLength + buffer.length);\n                    var cipher_1;\n                    if (_this._encrypt) {\n                        cipher_1 = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    _this._writeObject(value, buffer, key, cipher_1);\n                    uncompressedCount++;\n                    dictionary._updated = false;\n                }\n            });\n            this._cacheMap.forEach(function (value, key) {\n                if (value instanceof _PdfDictionary) {\n                    if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                        archiveXRef_1 += key.objectNumber + \" \" + updatedStream_1.length + _this._newLine;\n                        collection_1.push(key.objectNumber, 1);\n                        updatedCount++;\n                        _this._writeObject(value, updatedStream_1);\n                    }\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    var dictionary = value.dictionary;\n                    if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                        indexes_1.push(key.objectNumber, 1);\n                        uncompressedOffsets_1.push(currentLength + buffer.length);\n                        _this._writeObject(value, buffer, key);\n                        uncompressedCount++;\n                        dictionary._updated = false;\n                    }\n                }\n            });\n            for (var i = 0; i < collection_1.length; i++) {\n                indexes_1.push(collection_1[parseInt(i.toString(), 10)]);\n            }\n            var archiveOffset = void 0;\n            var archiveRef = void 0;\n            if (updatedCount > 0) {\n                archiveRef = this._getNextReference();\n                indexes_1.push(archiveRef.objectNumber, 2);\n                this._writeString(archiveXRef_1, data);\n                this._writeBytes(updatedStream_1, data);\n                var newDict = new _PdfDictionary(this);\n                newDict.set('Type', _PdfName.get('ObjStm'));\n                newDict.set('N', updatedCount);\n                newDict.set('First', archiveXRef_1.length);\n                newDict.set('Length', data.length);\n                var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n                archiveOffset = currentLength + buffer.length;\n                var cipher_2;\n                if (this._encrypt) {\n                    cipher_2 = this._encrypt._createCipherTransform(archiveRef.objectNumber, archiveRef.generationNumber);\n                }\n                this._writeObject(archiveStream, buffer, archiveRef, cipher_2);\n            }\n            var newRef = this._getNextReference();\n            var newStartXref = currentLength + buffer.length;\n            var newXref = new _PdfDictionary(this);\n            newXref.set('Type', _PdfName.get('XRef'));\n            newXref.set('Index', indexes_1);\n            newXref.set('W', [1, 3, 1]);\n            this._copyTrailer(newXref);\n            if (this._ids && this._ids.length > 0) {\n                newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n            }\n            var newXrefData = [];\n            this._writeLong(0, 1, newXrefData);\n            this._writeLong(1, 3, newXrefData);\n            this._writeLong(-1, 1, newXrefData);\n            if (uncompressedCount > 0) {\n                for (var index = 0; index < uncompressedCount; index++) {\n                    this._writeLong(1, 1, newXrefData);\n                    this._writeLong(uncompressedOffsets_1[index], 3, newXrefData); // eslint-disable-line\n                    this._writeLong(0, 1, newXrefData);\n                }\n            }\n            if (updatedCount > 0) {\n                for (var index = 0; index < updatedCount; index++) {\n                    this._writeLong(2, 1, newXrefData);\n                    this._writeLong(archiveRef.objectNumber, 3, newXrefData);\n                    this._writeLong(index, 1, newXrefData);\n                }\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(archiveOffset, 3, newXrefData);\n                this._writeLong(0, 1, newXrefData);\n            }\n            this._writeLong(1, 1, newXrefData);\n            this._writeLong(newStartXref, 3, newXrefData);\n            this._writeLong(0, 1, newXrefData);\n            newXref.set('Length', newXrefData.length);\n            var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n            var cipher = void 0;\n            if (this._encrypt) {\n                cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n            }\n            this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        else {\n            var tempBuffer_1 = '';\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfDictionary) {\n                    dictionary = value;\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    var offsetString = (currentLength + buffer.length).toString();\n                    while (offsetString.length < 10) {\n                        offsetString = '0' + offsetString;\n                    }\n                    var genString = key.generationNumber.toString();\n                    while (genString.length < 5) {\n                        genString = '0' + genString;\n                    }\n                    tempBuffer_1 += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                    updatedCount++;\n                    _this._writeObject(value, buffer, key);\n                }\n            });\n            var newStartXref = buffer.length + currentLength;\n            this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n            if (updatedCount > 0) {\n                this._writeString(tempBuffer_1, buffer);\n            }\n            this._writeString(\"trailer\" + this._newLine, buffer);\n            var newXref = new _PdfDictionary(this);\n            this._copyTrailer(newXref);\n            this._writeDictionary(newXref, buffer, this._newLine);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        var array = new Uint8Array(this._stream.length + buffer.length);\n        array.set(this._stream.bytes);\n        array.set(buffer, this._stream.length);\n        return array;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        newXref.set('Size', this._nextReferenceNumber);\n        newXref.set('Prev', this._prevStartXref);\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, buffer, reference, transform, isCrossReference) {\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var streamBuffer = [];\n        var value = stream.getString();\n        if (!isCrossReference) {\n            var byteArray = [];\n            for (var i = 0; i < value.length; i++) {\n                byteArray.push(value.charCodeAt(i));\n            }\n            if (stream._isCompress) {\n                var dataArray = new Uint8Array(byteArray);\n                var sw = new CompressedStreamWriter();\n                sw.write(dataArray, 0, dataArray.length);\n                sw.close();\n                value = sw.getCompressedString;\n                stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        this._pendingRefs.clear();\n        this._pendingRefs = undefined;\n        this._cacheMap.clear();\n        this._pendingRefs = undefined;\n        this._root = undefined;\n        this._startXRefQueue = [];\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                if (key) {\n                    switch (key.name.toLowerCase()) {\n                        case 'tx':\n                            field = PdfTextBoxField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                        case 'btn':\n                            if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                                field = PdfButtonField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfCheckBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'ch':\n                            if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                                field = PdfComboBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfListBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'sig':\n                            field = PdfSignatureField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                    }\n                }\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._allowCatalog = true;\n        this._crossReference._root._updated = true;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var item = field.itemAt(i);\n                var page = item._page;\n                page.annotations._annotations.push(item._ref);\n                page._pageDictionary.set('Annots', page.annotations._annotations);\n                page._pageDictionary._updated = true;\n            }\n        }\n        else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n            var page = field._page;\n            page.annotations._annotations.push(field._ref);\n            field._page._pageDictionary.set('Annots', field.page.annotations._annotations);\n            field._page._pageDictionary._updated = true;\n        }\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = item._getPage();\n                    if (page) {\n                        page._removeAnnotation(item._ref);\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._dictionary.update('NeedAppearances', value);\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (this._fieldCollection && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (typeof fieldDictionary !== 'undefined') {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        this._fields.push(ref);\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (typeof kids !== 'undefined' && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (typeof entry !== 'undefined' && entry !== null) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (typeof dictionary !== 'undefined' && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (typeof kidDictionary !== 'undefined' && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && page1 instanceof PdfPage && page2 && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none || this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (kids && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                this._writeArray(writer, dictionary.getArray(key), dictionary);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = primitive.getString(true);\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                case 'TextMarkupContent':\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _convertStringToBytes, _bytesToString, _hexStringToByteArray, _decode } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            for (var i = 0; i < key.length; i++) {\n                _this._jsonData.push(key.charCodeAt(i));\n            }\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                for (var i = 0; i < value.length; i++) {\n                    _this._jsonData.push(value.charCodeAt(i));\n                }\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _convertStringToBytes(i.toString(), []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _convertStringToBytes(this._convertToJson(this._table), this._jsonData);\n                    if (k < page.annotations.count - 1) {\n                        this._jsonData.push(this._comma);\n                    }\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (value) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive.indexOf('\"') !== -1) {\n                    primitive = primitive.replace(/\"/g, '\\\\\"');\n                }\n                this._table.set(key, primitive);\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'RC':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n            case 'TextMarkupContent':\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            case 'CustomData':\n                if (primitive && primitive.length > 2 && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n            default:\n                this._writeAttributeString(key, primitive);\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (vertices && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                this._exportMeasureFormatDetails('area', array[0]);\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                this._exportMeasureFormatDetails('distance', array[0]);\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                this._exportMeasureFormatDetails('xformat', array[0]);\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                this._exportMeasureFormatDetails('tformat', array[0]);\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                this._exportMeasureFormatDetails('vformat', array[0]);\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails.has('C')) {\n            details.set('c', this._getValue(measurementDetails.get('C'), true));\n        }\n        if (measurementDetails.has('F')) {\n            details.set('f', this._getValue(measurementDetails.get('F'), true));\n        }\n        if (measurementDetails.has('D')) {\n            details.set('d', this._getValue(measurementDetails.get('D'), true));\n        }\n        if (measurementDetails.has('RD')) {\n            details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n        }\n        if (measurementDetails.has('U')) {\n            details.set('u', this._getValue(measurementDetails.get('U'), true));\n        }\n        if (measurementDetails.has('RT')) {\n            details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n        }\n        if (measurementDetails.has('SS')) {\n            details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n        }\n        if (measurementDetails.has('FD')) {\n            details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array) {\n        if (value instanceof _PdfName) {\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var array_1 = [];\n            this._writeArray(array_1, value, dictionary);\n            this._writeTable('array', this._convertToJsonArray(array_1), table, key, array_1);\n        }\n        else if (typeof value === 'string') {\n            this._writeTable('string', value, table, key, array);\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = value.getString(true);\n            if (!streamDictionary.has('Length') && data && data !== '') {\n                streamDictionary.update('Length', value.length);\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += '\"' + key + '\":\"' + value + '\"';\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'customdata':\n                    _this._addString(dictionary, 'CustomData', typeof value === 'string' ? value : JSON.stringify(value));\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    _this._addString(dictionary, 'AllowedInteractions', value);\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, value);\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            value = this._crossReference._getNextReference();\n            dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, dictionary);\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (this._annotationObjects !== null && typeof this._annotationObjects !== 'undefined' && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (this._table !== null && typeof this._table !== 'undefined' && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary !== null && typeof pageDictionary !== 'undefined') {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (dictionary.has('NM')) {\n                            var name_1 = dictionary.get('NM');\n                            if (name_1 !== null) {\n                                _this.fdfString += '(' + _this._getFormattedString(name_1) + ')';\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (array !== null && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var bookmark = this._getFirstBookmark(this);\n        var isBookmark = (bookmark) ? true : false;\n        while (isBookmark && bookmark._dictionary) {\n            this._bookMarkList.push(bookmark);\n            bookmark = bookmark._next;\n            isBookmark = (bookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getFirstBookmark = function (bookmarkBase) {\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has('First')) {\n            var bookMarkDictionary = bookmarkBaseDictionary.get('First');\n            if (bookMarkDictionary) {\n                bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (!_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination (Read only).\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var namedDestination = this._obtainNamedDestination();\n            if (namedDestination === null || typeof namedDestination === 'undefined') {\n                value = this._obtainDestination();\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination (Read only).\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title (Read only).\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                this._title = this._obtainTitle();\n            }\n            return this._title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color (Read only).\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the textStyle (Read only).\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not (Read only).\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Count')) {\n                var value = this._dictionary.get('Count');\n                if (value >= 0) {\n                    return true;\n                }\n            }\n            return this._isExpanded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary.has('Next')) {\n                var dictionary = this._dictionary.get('Next');\n                if (dictionary) {\n                    nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainTitle = function () {\n        var value = '';\n        if (this._dictionary.has('Title')) {\n            value = this._dictionary.get('Title');\n        }\n        return value;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary.has('A')) {\n                var action = dictionary.get('A');\n                if (action.has('D')) {\n                    destination = action.get('D');\n                }\n            }\n            else if (dictionary.has('Dest')) {\n                destination = dictionary.get('Dest');\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    PdfBookmark.prototype._obtainDestination = function () {\n        var bookMarkDictionary = this._dictionary;\n        var page;\n        if (bookMarkDictionary && bookMarkDictionary.has('Dest')) {\n            var destinationArray = bookMarkDictionary.getArray('Dest'); // eslint-disable-line\n            var loadedDocument = this._crossReference._document;\n            var mode = void 0;\n            if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                var value = destinationArray[0]; // eslint-disable-line\n                var left = void 0;\n                var height = void 0;\n                var bottom = void 0;\n                var right = void 0;\n                var zoom = void 0;\n                if (typeof value === 'number') {\n                    var pageNumber = destinationArray[0];\n                    if (pageNumber >= 0) {\n                        var document_1 = this._crossReference._document;\n                        if (document_1 && document_1.pageCount > pageNumber) {\n                            page = document_1.getPage(pageNumber);\n                        }\n                        if (destinationArray.length > 1) {\n                            mode = destinationArray[1];\n                        }\n                        if (mode && mode.name === 'XYZ') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                height = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                zoom = destinationArray[4];\n                            }\n                            if (page) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                if (page.rotation !== PdfRotationAngle.angle0) {\n                                    _checkRotation(page, height, left);\n                                }\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                this._destination._index = pageNumber;\n                                this._destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                    || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (value instanceof _PdfDictionary) {\n                    var pageDictionary = value;\n                    var index = void 0;\n                    if (loadedDocument && pageDictionary) {\n                        index = _getPageIndex(loadedDocument, pageDictionary);\n                    }\n                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                        page = loadedDocument.getPage(index);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode) {\n                        if (mode.name === 'XYZ') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                height = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                zoom = destinationArray[4];\n                            }\n                            if (page) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                if (page.rotation !== PdfRotationAngle.angle0) {\n                                    topValue = _checkRotation(page, height, left);\n                                }\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                this._destination._index = index;\n                                this._destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                    typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (mode.name === 'FitR') {\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    bottom = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    right = destinationArray[4];\n                                }\n                                if (destinationArray.length > 5) {\n                                    height = destinationArray[5];\n                                }\n                                if (page) {\n                                    left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                    height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                    right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                    this._destination = new PdfDestination(page, [left, bottom, right, height]);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitR;\n                                }\n                            }\n                            else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                    page = loadedDocument.getPage(index);\n                                }\n                                if (page && page.size) {\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                    this._destination = new PdfDestination(page, [0, topValue]);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitH;\n                                    if (height === null || typeof height === 'undefined') {\n                                        this._destination._setValidation(false);\n                                    }\n                                }\n                            }\n                            else {\n                                if (page && mode.name === 'Fit') {\n                                    this._destination = new PdfDestination(page);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitToPage;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNamedDestination` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Destination dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfNamedDestination(dictionary, crossReference) {\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        var destinationElement = destinationArray[Number.parseInt(i.toString(), 10)];\n                        this._addCollection(destinationElement);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog && catalog._catalogDictionary.has('Outlines')) {\n                var outlines = catalog._catalogDictionary.get('Outlines');\n                if (outlines) {\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    if (outlines.has('First')) {\n                        this._bookmarkBase._reproduceTree();\n                    }\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        this._pages.clear();\n        this._pages = undefined;\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this.form._doPostProcess(isFlatten);\n        if (isFlatten) {\n            var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary._updated = true;\n            if (formObject instanceof _PdfReference) {\n                this._crossReference._cacheMap.set(formObject, dictionary);\n            }\n            else {\n                this.form._dictionary = dictionary;\n                this._crossReference._allowCatalog = true;\n            }\n            this.form._clear();\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","import { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_ImageDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _ImageDecoder(stream) {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n        this._stream = stream;\n        this._initialize();\n    }\n    Object.defineProperty(_ImageDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _ImageDecoder.prototype._initialize = function () {\n        if (this._format === _ImageFormat.unknown && this._checkIfJpeg()) {\n            this._format = _ImageFormat.jpeg;\n            this._parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._parseJpegImage = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _ImageDecoder.prototype._checkIfJpeg = function () {\n        this._reset();\n        for (var i = 0; i < _ImageDecoder._jpegHeader.length; i++) {\n            if (_ImageDecoder._jpegHeader[Number.parseInt(i.toString(), 10)] !== this._getBuffer(i)) {\n                return false;\n            }\n            this._position++;\n        }\n        return true;\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this._position;\n            buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n            this._position++;\n        }\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _ImageDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _ImageDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _ImageDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    _ImageDecoder._jpegHeader = [255, 216];\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './../../graphics/images/image-decoder';\nimport { PdfImage } from './pdf-image';\nimport { _decode } from './../../utils';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = new _ImageDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n"],"names":["_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","i","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","value","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","length","code","String","fromCharCode","charAt","isDirect","bytes","Uint8Array","_convertStringToBytes","destination","_areArrayEqual","first","second","Number","parseInt","toString","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","apply","stringBuffer","chunkEnd","Math","min","chunk","subarray","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decode","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","_i","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","max","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","start","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","j","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","set","matrix","_PdfTransformationMatrix","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","regular","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","annotation","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","end","_checkInkPoints","inkPointsCollection","previousCollection","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","PdfDestinationMode","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","this","_initialize","bounds","_size","_isReadOnly","_PdfContentStream","_writeTransformation","defineProperty","_g","PdfGraphics","_initializeCoordinates","_isTemplateGraphics","enumerable","configurable","PdfStringFormat","arg1","arg2","horizontalScalingFactor","rightToLeft","_wordWrapType","word","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","top","characterSpacing","wordSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getSize","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","Error","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","from","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_doLayout","_clear","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","builder","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_whiteSpace","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","offset","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","unicode","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","floor","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_index","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","right","bottom","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte1","byte2","byte3","byte4","_writeBytes","buff","i_1","written","read","_createInternals","charCode","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","data","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_write","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","pstart","pend","_reArrange","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","byte","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg3","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_calculateStyle","iStyle","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","fontBox","_PdfPath","_isRoundedRectangle","_fillMode","winding","_points","_pathTypes","_isStart","_addLine","_addPoints","_PathPointType","_addLines","linePoints","_addPoint","startIndex","endIndex","_lastPoint","_addArc","startAngle","sweepAngle","list","bezier","_addRectangle","_startFigure","_closeFigure","_addPolygon","newPoints","_addEllipse","_addBezierPoints","pointsCollection","inner1","inner2","_addBezier","firstX","firstY","secondX","secondY","endX","endY","closePath","_getBounds","xmin","xmax","ymin","ymax","_visible","_isTransparentBackColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_kids","_form","names","_actualName","name_1","_mappingName","name_2","mappingName","_alternateName","name_3","toolTip","_isLoaded","itemAt","_defaultIndex","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","_page","rotate","_kidsCount","_defaultAppearance","_da","isNew","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","borderColor","_mkDictionary","colorArray","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","angle0","rotationAngle","noExport","index1","_ref","_tabIndex","_tabOrder","manual","tabOrder","annotationCollection","PdfAnnotationCollection","_annotations","_annotationIndex","annotations","document_1","_document","widgetRef","_gray","PdfBrush","_silver","_white","_black","mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","splice","parsedItems_1","removeItem","da","bs","dash","_checkFieldFlag","_initializeFont","resource","fontDict","isReference","keyName","_getNextReference","_fontName","fontName","_drawRectangularControl","parameter","drawRectangle","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","drawLine","brush","path","_drawPath","_drawRadioButton","graphics","checkSymbol","unchecked","drawEllipse","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","_color","leftTop","rightBottom","PdfPen","drawArc","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","save","size_1","translateTransform","rotateTransform","z","drawString","center","middle","restore","_addToKid","currentIndex","_drawTemplate","_sw","_setTextRenderingMode","_TextRenderingMode","fill","_addToOptions","PdfListBoxField","_listValues","_options","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getAppearanceStateValue","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","PdfTextBoxField","_autoResizeText","_defaultValue","multiLine","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","source","appearanceStream","_PaintParameter","backcolor","insertSpaces","_beginMarkupSequence","_drawTextBox","scrollable","_endMarkupSequence","multiline","scroll","startlocation","isAutoFontSize","_assignText","fieldDictionary","pushButton","pressed","isPressed","_drawPressedButton","_drawButton","PdfCheckBoxField","PdfStateItem","V","AS","_drawAppearance","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","PdfRadioButtonListField","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","selectedIndex","name_5","PdfRadioButtonListItem","_field","_setField","parsedItems_2","options","radio","_optionValue","checkName","asName","PdfListField","_bounds","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","endsWith","_getFontHeight","isNaN","_obtainSelectedValue","primitive","selectedIndexes","PdfComboBoxField","combo","acroForm","fontString","verticalAlignment","stringFormat","_drawComboBox","location_1","doubleBorderWidth","padding","setClip","itemTextBound","itemFont","widths_1","textSize","h","textWidth","_drawListBox","_loop_1","location_2","selected","this_1","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isImported","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","setTransparency","_removeAnnotationFromPage","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","lineAnnotation","_needInitializeGraphics","rubberStampAnnotation","needScale","_isAnnotationTemplate","_needScale","scaleX","scaleY","_origin","_o","radians","_drawCloudStyle","pen","radius","overlap","isAppearance","_isClockWise","sortedPoints","circles","circleOverlap","previousPoint","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","_dashStyle","_dashPattern","intensity","_createRectangleAppearance","borderEffect","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_pen","_stateControl","_buildUpPath","_drawGraphicsPath","drawPolygon","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","measureDictionary","_colorToHex","col","_componentToHex","hex","_getRotatedBounds","rotateAngle","corners","_transform","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","subject","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","content","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","cropBoxOrMediaBox","PdfComment","_comments","PdfPopupAnnotationCollection","_reviewHistory","PdfLineAnnotation","_unit","_unitString","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","flatten","_appearanceTemplate","_createLineMeasureAppearance","boundsArray","_obtainLineBounds","updatedBounds","flattenPopups","measure","reference_1","_isFlatten","area","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","pow","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","_drawLine","rectangleBounds","distance","_PdfUnitConvertor","_convertUnits","PdfCircleAnnotation","_measureType","diameter","circleAnnotation","_createCircleMeasureAppearance","reference_2","fontsize","_template","rect1","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","vertices","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","polygonPoints","pageSize","points_1","points_2","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","endLineStyle","beginLineStyle","pathTypes","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","PdfAngleMeasurementAnnotation","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","inkAnnotation","inkList","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","inkPoints","pathPointCont","pathPoints","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","_lineCap","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","popupAnnotation","_obtainIconName","_createPopupAppearance","pen1","template_1","PdfFileLinkAnnotation","fileName","_fileName","fileLinkAnnotation","_action","action","actionDictionary","_addAction","nextAction","fileDictionary","PdfUriAnnotation","uri","_uri","uriAnnotation","linkDict","PdfDocumentLinkAnnotation","documentLinkAnnotation","_obtainDestination","_destination","_addDocument","holder","pageNumber","top_3","zoom","leftValue","PdfDestination","_setValidation","fitToPage","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_array","PdfTextWebLinkAnnotation","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","_brush","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","_stream","fileAttachmentAnnotation","_addAttachment","fileSpecification","embeddedFile","fileSpectDictionary","paramsDictionary","toTimeString","_newLine","_writeObject","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","pathPointsCount","location","zigZag","textQuadLocation","noofRect","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","PdfRubberStampAnnotation","_stampWidth","_stampAppearanceFont","_appearance","innerBounds","_obtainInnerBounds","_createRubberStampAppearance","_transformBBox","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","mMatrix","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","scaleTransform","rubberFont","_drawRubberStamp","drawRoundedRectangle","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","freeTextAnnotation","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","startsWith","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_setPaddings","paddings","_paddings","_updateCropBoxValues","_saveFreeTextDictionary","cropOrMediaBox","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","markUpText","_rcText","hasAlignment","justify","pointY","pointX","annotationIntent","_getXmlFormattedString","markupText","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","normalTemplate","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","bcArray","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_9","document_2","_backColor","_initializeItem","option","_getBorderEffect","_styleToEffect","xref","_parsedAnnotations","at","_parseAnnotation","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","remove","removeAt","_getProperty","actualIndex","_reorderParsedAnnotations","_processResources","_updateChildReference","comments","reviewHistory","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","annotationDictionary","parentReference","isReview","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","map","remaining","clear","PdfPage","pageIndex","_isAnnotationParsed","_pageIndex","widgets_1","_parseWidgetReferences","validAnnotations_1","_rotation","_obtainTabOrder","tabs","column","structure","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","mbox","cbox","cx","cy","crx","cry","_cropBox","_mediaBoxUpperRightBound","_graphicsState","origin","sign","clip","_clipBounds","_fetchResources","_resourceObject","_hasResourceReference","_getCropOrMediaBox","_destroy","_location","_destinationMode","_zoom","_isValid","_destinationBounds","_initializePrimitive","fitR","fitH","_parent","_PdfStreamWriter","_writeOperator","write","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","forStroking","_setColor","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_showText","_writeText","string","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","_showNextLineText","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_bytes","currentData","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","needSave","drawImage","horizontalResolution","ucX","ucY","pixel","_pendingResource","_source","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_doRestore","pop","_transformationMatrix","_constructArcPath","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","_updateImageResource","image","_reference","_imageStream","_resources","needTransform","_translate","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_scale","base","arc","sweep","_writePen","_dashOffset","_lineJoin","_miterLimit","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","internal","layoutRectangle","shouldClip","clipRegion","clipBounds","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","tm","fillStroke","stroke","clipFlag","cs","ws","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","ttfFont","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","layoutedRectangle","fillMode","needClosing","isBrush","isPen","alternate","needTransformation","_multiply","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_Matrix","arg6","_clone","slice","_offsetX","_offsetY","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","BaseException","message","FormatError","ParserEndOfFileException","objectNumber","gen","generationNumber","_PdfReferenceSet","parent","_set","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_a","_b","_c","property","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","_isCompress","getByte","getBytes","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","getString","isHex","skip","getBaseStreams","arrayBuffer","isImageStream","dataStream2","strEnd","Filter","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getName","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","test","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","bufferLength","minBufferLength","ensureBuffer","requested","byteLength","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_cipher","_nextChunk","_initialized","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","bits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_catalogDictionary","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","count_1","kids","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","bitMask","kk","prevRow","upLeft","pa","pb","pc","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","done","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","imageCache","refill","tryShift","cipherTransform","makeInlineImage","_checkEnd","makeStream","decryptString","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filter","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","createStream","bytesLength","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","makeFilter","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","ii","endOffset","_Linearization","isValid","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","remainder","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","encryptString","pad","repeat","crypto","getRandomValues","_PdfCrossReference","_entries","_crossReferencePosition","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_parse","trailerDictionary","_indexObjects","_readXRef","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","_fileStructure","_crossReferenceType","root","hasRoot","_root","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","currentLength","updatedCount","uncompressedCount","updatedStream_1","archiveXRef_1","indexes_1","collection_1","uncompressedOffsets_1","_allowCatalog","cipher_1","archiveOffset","archiveRef","newDict","archiveStream","cipher_2","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","newXrefStream","tempBuffer_1","offsetString","genString","_writeDictionary","now","crossReferenceInfo","transform","isCrossReference","_writeStream","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","dataArray","sw","CompressedStreamWriter","close","getCompressedString","value_1","_escapeString","PdfForm","_hasKids","_exportEmptyFields","_fieldCollection","_signFlag","_parsedFields","_fields","_createFields","_needAppearances","fieldAt","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","page_1","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","nodes","fieldKids","kidsDict","_isNode","isNode","subtype","_widgetReferences","fieldReference","kidReference","kidDictionary","_getFieldIndex","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","fieldName","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_XmlWriter","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","previousTop","_ExportHelper","_asPerSpecification","_formKey","_groupReferences","_groupHolders","_richTextPrefix","_table","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","_getEncodedValue","selectedValue","_getExportValue","radioButton","_exportFormFieldData","replaceValue","_getAnnotationType","_getValue","isJson","_getValidString","_getColor","kid","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_addReferenceToGroup","_handlePopup","popupReference","popup","_importField","richTextValue","_importFieldData","selectedValues_1","options_1","AP","lowerCase","_containsExportValue","_checkSelected","asEntry","toLocaleLowerCase","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","parentElements","newTable","_writeAnnotationData","hasAppearance","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","fsDictionary","efDictionary","fStream","fDictionary","elementCount","_writeRawData","defaultStyle","textWriter","_writeAppearanceDictionary","_writePrefix","_writeArray","streamDictionary","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","parentElement","dataValues","textContent","richText","innerHTML","hasAttributes","_getAnnotationDictionary","isValidType","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","childElement","popupDictionary","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","_loop_2","inkChild","inkChildElement","pointsArray_1","_addStreamData","raw","_addFileAttachment","_addSound","soundStream","soundReference","fileStream","param","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getBoolean","_getData","isImage","Length","_addArrayElements","floatValue","intValue","bool","measurement","xformat","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","isAnnotationAdded","_exportAnnotation","_convertToJson","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","vertice","json","details","parentTable","appearanceTable","_writeTable","array_1","_convertToJsonArray","dataTable","streamTable","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","styleKey","styleValue","gestureKeys","gesture","stringify","dashArray","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","dataKeys","byteString","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","_appendElement","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","_getFirstBookmark","isBookmark","_next","bookmarkBase","bookMark","bookmarkBaseDictionary","bookMarkDictionary","PdfBookmark","destinationArray","namedDestination","_obtainNamedDestination","_namedDestination","_title","_obtainTitle","_textStyle","_obtainTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","destinationElement","destinationObject","_XmlDocument","_checkXml","tagName","xmlDocument","PdfFileStructure","PdfDocument","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_pages","_checkHeader","_startXRef","_linear","err","_linearization","_find","startXRefLength","found","_pageCount","_catalog","catalog","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","settings","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","Annots","_addWatermarkText","_exportAppearance","_exportName","_PdfPaddings","_ImageDecoder","_bitsPerComponent","_noOfComponents","_imageData","_checkIfJpeg","TypeError","jpeg","_parseJpegImage","_reset","imgData","_getBuffer","isLengthExceed","_seek","_readExceededJpegImage","_jpegHeader","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","_toUnsigned16","skippedByte","marker","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder"],"mappings":"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xZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,OACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,OACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,OACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,OACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,OACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,KAAM,MACpChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,MACrChN,KAAKwmB,gBAAgBxZ,SAAS,KAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MAAO,OACrChN,KAAKwmB,gBAAgBxZ,SAAS,MA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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAET3B,EAA+ByC,aAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCtE,EAA+B0E,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAA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,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,SAE7CG,IACA,IAAIH,YACA,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,KAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS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"}