{"version":3,"file":"ej2-pdf.min.js","sources":["../../src/pdf/core/utils.js","../../src/pdf/core/pdf-primitives.js","../../src/pdf/core/enumerator.js","../../src/pdf/core/graphics/pdf-template.js","../../src/pdf/core/fonts/pdf-string-format.js","../../src/pdf/core/fonts/pdf-font-metrics.js","../../src/pdf/core/fonts/string-layouter.js","../../src/pdf/core/fonts/ttf-table.js","../../src/pdf/core/fonts/ttf-reader.js","../../src/pdf/core/fonts/unicode-true-type-font.js","../../src/pdf/core/graphics/rightToLeft/text-shape.js","../../src/pdf/core/graphics/rightToLeft/bidirectional.js","../../src/pdf/core/graphics/rightToLeft/text-renderer.js","../../src/pdf/core/fonts/pdf-standard-font.js","../../src/pdf/core/graphics/pdf-path.js","../../src/pdf/core/form/field.js","../../src/pdf/core/annotations/pdf-appearance.js","../../src/pdf/core/annotations/annotation.js","../../src/pdf/core/annotations/annotation-collection.js","../../src/pdf/core/pdf-page.js","../../src/pdf/core/graphics/pdf-stream-writer.js","../../src/pdf/core/graphics/images/pdf-image.js","../../src/pdf/core/graphics/pdf-graphics.js","../../src/pdf/core/base-stream.js","../../src/pdf/core/content-parser.js","../../src/pdf/core/decode-stream.js","../../src/pdf/core/decrypt-stream.js","../../src/pdf/core/flate-stream.js","../../src/pdf/core/pdf-catalog.js","../../src/pdf/core/predictor-stream.js","../../src/pdf/core/pdf-parser.js","../../src/pdf/core/security/encryptor.js","../../src/pdf/core/pdf-cross-reference.js","../../src/pdf/core/form/form.js","../../src/pdf/core/import-export/xml-writer.js","../../src/pdf/core/import-export/xfdf-document.js","../../src/pdf/core/import-export/json-document.js","../../src/pdf/core/import-export/fdf-document.js","../../src/pdf/core/pdf-outline.js","../../src/pdf/core/import-export/xml-document.js","../../src/pdf/core/pdf-file-structure.js","../../src/pdf/core/pdf-document.js","../../src/pdf/core/annotations/pdf-paddings.js","../../src/pdf/core/graphics/images/image-decoder.js","../../src/pdf/core/graphics/images/pdf-bitmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array\n */\nexport function _stringToBytes(value, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var bytes = [];\n    for (var i = 0; i < value.length; ++i) {\n        bytes.push(value.charCodeAt(i) & 0xff);\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {number[]} destination byte array.\n * @returns {number[]} Byte array\n */\nexport function _convertStringToBytes(value, destination) {\n    for (var i = 0; i < value.length; ++i) {\n        destination.push(value.charCodeAt(i) & 0xff);\n    }\n    return destination;\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes) {\n    var length = bytes.length;\n    var max = 8192;\n    if (length < max) {\n        return String.fromCharCode.apply(null, bytes);\n    }\n    var stringBuffer = [];\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return isDirect ? output : new Uint8Array(output);\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = '';\n    var currentChar = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        if (i % 3 === 0) {\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n        }\n        else if (i % 3 === 1) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n        }\n        else if (i % 3 === 2) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n        }\n    }\n    if (bytes.length % 3 === 1) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n    }\n    if (bytes.length % 3 === 2) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n    }\n    return output;\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = '';\n    switch (style) {\n        case PdfFontStyle.regular:\n            value = 'Regular';\n            break;\n        case PdfFontStyle.bold:\n            value = 'Bold';\n            break;\n        case PdfFontStyle.italic:\n            value = 'Italic';\n            break;\n        case PdfFontStyle.underline:\n            value = 'Underline';\n            break;\n        case PdfFontStyle.strikeout:\n            value = 'Strikeout';\n            break;\n        default:\n            value = 'Regular';\n            break;\n    }\n    return value;\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            this._size = [value[2], value[3]];\n            this._content = new _PdfContentStream([]);\n            this._content.dictionary._crossReference = this._crossReference;\n            this._initialize();\n            this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template.\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines == null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs != null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs != null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this._calculateStyle(style);\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._calculateStyle = function (style) {\n        var iStyle = this._fontInternal._ttfMetrics._macStyle;\n        if ((style & PdfFontStyle.underline) !== 0) {\n            iStyle |= PdfFontStyle.underline;\n        }\n        if ((style & PdfFontStyle.strikeout) !== 0) {\n            iStyle |= PdfFontStyle.strikeout;\n        }\n        this.style = iStyle;\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n        }\n        metrics._name = fontFamily.toString();\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode } from './../enumerator';\nvar _PdfPath = /** @class */ (function () {\n    function _PdfPath() {\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._points = [];\n        this._pathTypes = [];\n        this._isStart = true;\n    }\n    Object.defineProperty(_PdfPath.prototype, \"_lastPoint\", {\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[(count - 1)][0];\n                value[1] = this._points[(count - 1)][0];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfPath.prototype._addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], _PathPointType.line);\n    };\n    _PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], _PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this._addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    _PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i++) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, _PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this._lastPoint[0] || point[1] !== this._lastPoint[1])) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n                else if (point[0] !== this._lastPoint[0] && point[1] !== this._lastPoint[1]) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n            i++;\n        }\n    };\n    _PdfPath.prototype._addPoint = function (points, type) {\n        this._points.push(points);\n        this._pathTypes.push(type);\n    };\n    _PdfPath.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, _PathPointType.bezier);\n        }\n    };\n    _PdfPath.prototype._addRectangle = function (x, y, width, height) {\n        this._startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this._startFigure();\n        this._addPoints(newPoints, _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addEllipse = function (x, y, width, height) {\n        this._startFigure();\n        this._addArc(x, y, width, height, 0, 360);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this._addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    _PdfPath.prototype._addBezier = function (x, y, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [];\n        points.push(x);\n        points.push(y);\n        points.push(firstX);\n        points.push(firstY);\n        points.push(secondX);\n        points.push(secondY);\n        points.push(endX);\n        points.push(endY);\n        this._addPoints(points, _PathPointType.bezier);\n    };\n    _PdfPath.prototype._closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= _PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this._closeFigure(this._points.length - 1);\n            }\n            this._startFigure();\n        }\n    };\n    _PdfPath.prototype._startFigure = function () {\n        this._isStart = true;\n    };\n    _PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return _PdfPath;\n}());\nexport { _PdfPath };\nexport var _PathPointType;\n(function (_PathPointType) {\n    _PathPointType[_PathPointType[\"start\"] = 0] = \"start\";\n    _PathPointType[_PathPointType[\"line\"] = 1] = \"line\";\n    _PathPointType[_PathPointType[\"bezier\"] = 3] = \"bezier\";\n    _PathPointType[_PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    _PathPointType[_PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    _PathPointType[_PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    _PathPointType[_PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(_PathPointType || (_PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        value = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n            return value;\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDict = this._mkDictionary;\n                if (typeof mkDict === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDict.has('BC') || _parseColor(mkDict.getArray('BC')) !== value) {\n                    mkDict.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var annots;\n            if (this.page._pageDictionary.has('Annots')) {\n                annots = this.page._pageDictionary.get('Annots');\n            }\n            if (this._kids && this._kids.length > 0) {\n                for (var i = 0; i < this._kids.length; i++) {\n                    var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                    if (reference) {\n                        if (this.page._pageDictionary.has('Annots')) {\n                            if (annots) {\n                                var index1 = annots.indexOf(reference);\n                                if (index1 !== -1) {\n                                    return index1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                if (this._ref) {\n                    if (annots) {\n                        var index1 = annots.indexOf(this._ref);\n                        if (index1 !== -1) {\n                            return index1;\n                        }\n                    }\n                }\n            }\n            return -1;\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            var page = this.page;\n            if (page && (this.form._tabOrder === PdfFormFieldsTabOrder.manual || page.tabOrder === PdfFormFieldsTabOrder.manual)) {\n                if (page._pageDictionary.has('Annots')) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    var index = annots.indexOf(this._ref);\n                    if (index < 0) {\n                        index = this._annotationIndex;\n                    }\n                    var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                    page._pageDictionary.update('Annots', annotations);\n                    page._pageDictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    bounds[2] - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        var currentIndex = this._kidsCount;\n        item._index = currentIndex;\n        this._kids.push(item._ref);\n        this._parsedItems.set(currentIndex, item);\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics._drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = text;\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = text;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics._drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        format.alignment = PdfTextAlignment.center;\n                        this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = parameter.bounds;\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        var x = rectangle[1];\n                        var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics._drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (isPressed) {\n            this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        else {\n            this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, this);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update('Yes', normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update('Yes', pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, this);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update(item.value, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(item.value, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var width = itemFont.measureString(options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var text = options[values[0]][1];\n                var textSize = itemFont.measureString(text, [0, 0], format, 0, 0);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont._size = i;\n                        var size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont._size = fontSize;\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                for (var i = 0; i < options.length; i++) {\n                    if (typeof index !== 'undefined' && index !== null) {\n                        this._listValues[Number.parseInt(i.toString(), 10)] = options[Number.parseInt(i.toString(), 10)][1];\n                        if (i === index) {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            this._selectedIndex = i;\n                        }\n                        else {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                        }\n                    }\n                    else {\n                        this.itemAt(i)._text = '';\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (!this._isLoaded && (isFlatten || needAppearance)) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics._drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics._drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics._drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics._drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        if (typeof bounds !== 'undefined') {\n            this._bounds = bounds;\n        }\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && (this._dictionary.has('Border') || (width || vRadius || hRadius))) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                var hasKey = false;\n                if (this._dictionary.has('Subj')) {\n                    this._dictionary.update('Subj', value);\n                    this._subject = value;\n                    hasKey = true;\n                }\n                if (!hasKey || this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                    this._subject = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary.has('Rotate')) {\n            angle = this._dictionary.get('Rotate');\n        }\n        else if (this._dictionary.has('Rotation')) {\n            angle = this._dictionary.get('Rotation');\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = linePoints.length;\n        var x = [];\n        var y = [];\n        if (linePoints && count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) || (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics._drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._removeAnnotationFromPage(this._page, this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this._type === _PdfAnnotationType.lineAnnotation && !this._dictionary.has('AP')) {\n            currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                this.bounds.width, this.bounds.height]);\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox')) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox')) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(scaleX === 1 && scaleY === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            graphics._drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._removeAnnotationFromPage(this._page, this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotationFromPage = function (page, annotation) {\n        var annotations = [];\n        if (page._pageDictionary && page._pageDictionary.has('Annots')) {\n            annotations = page._pageDictionary.get('Annots');\n        }\n        annotation._dictionary.set('P', page._ref);\n        var index = annotations.indexOf(annotation._ref);\n        if (index !== -1) {\n            annotations.splice(index, 1);\n            if (this._crossReference._cacheMap.has(annotation._ref)) {\n                this._crossReference._cacheMap.delete(annotation._ref);\n            }\n        }\n        page._pageDictionary.set('Annots', annotations);\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            this._removeAnnotationFromPage(page, annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint = points[points.length - 1];\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path._closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (brush !== null) {\n            graphics._drawPath(pdfpath, null, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path._closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics._drawPath(pdfpath, pen, null);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        for (var i = 0; i < points.length; i++) {\n            var first = points[Number.parseInt(i.toString(), 10)];\n            var second = points[(i + 1) % points.length];\n            sum += (second[0] - first[0]) * (second[1] + first[1]);\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        var radius = intensity * 4.25;\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new _PdfPath();\n            graphicsPath._addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(startPoint, (angle + 60), count);\n                second = this._getAxisValue(startPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = collection[Number.parseInt(i.toString(), 10)];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = void 0;\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new _PdfPath();\n            path._addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        clientSize = _page.size;\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._removeAnnotationFromPage(this._page, this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._removeAnnotationFromPage(this._page, this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            var cropBox = this._page.cropBox;\n            if (cropBox && _areNotEqual(cropBox, [0, 0, 0, 0])) {\n                cropBoxOrMediaBox = cropBox;\n            }\n            else {\n                var mBox = this._page.mediaBox;\n                if (mBox && _areNotEqual(mBox, [0, 0, 0, 0])) {\n                    cropBoxOrMediaBox = mBox;\n                }\n            }\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            var boundsArray = this._obtainLineBounds();\n            var bounds = { x: boundsArray[0],\n                y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n            this._bounds = bounds;\n            var updatedBounds = [this._bounds.x,\n                this._bounds.y,\n                this._bounds.x + this._bounds.width,\n                this._bounds.y + this._bounds.height];\n            this._dictionary.update('Rect', updatedBounds);\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, this._getRotationAngle());\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush = new PdfBrush(typeof this.innerColor !== 'undefined' ? this._innerColor : [0, 0, 0]);\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var size = this._page.size;\n            var rect1 = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            if (this._isBounds) {\n                nativeRectangle = rect1;\n            }\n            this._dictionary.update('Rect', [rect1[0], rect1[1], rect1[0] + rect1[2], rect1[1] + rect1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics._drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            array[array.length] = this._points[0];\n            array[array.length] = this._points[1];\n        }\n        this._points = array;\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new _PdfPath();\n                    graphicsPath._addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new _PdfPath();\n                graphicsPath._addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points !== null) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new _PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics._drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new _PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics._drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new _PdfPath();\n        graphicspath._addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new _PdfPath())._addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new _PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        path._addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        graphics._drawPath(path, pen);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                _setMatrix(template, this._getRotationAngle());\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    var p1 = [];\n                    var p2 = [];\n                    var value = this._getControlPoints(point, p1, p2);\n                    p1 = value.controlP1;\n                    p2 = value.controlP2;\n                    var index = 0;\n                    for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                        pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                        index++;\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new _PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1._addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            if (this._isLoaded) {\n                                borderPen._lineCap = PdfLineCap.round;\n                            }\n                            graphics._drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics._drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n            this._isModified = false;\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n            });\n        }\n        return this._getInkBoundsValue();\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics._drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var template;\n        if (this._dictionary.has('Name')) {\n            if (this._dictionary.get('Name').name === 'Comment') {\n                if (this._dictionary.has('Rect')) {\n                    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                    template = new PdfTemplate(nativeRectangle, this._crossReference);\n                    _setMatrix(template, this._getRotationAngle());\n                    var graphics = template.graphics;\n                    var rectValue = this._dictionary.getArray('Rect');\n                    if (rectValue !== null) {\n                        var pen = new PdfPen([0, 0, 0], 0.3);\n                        var brush = new PdfBrush(this.color);\n                        var pen1 = new PdfPen([255, 255, 255], 1);\n                        var points = new Array();\n                        points.push([6, 8]);\n                        points.push([9, 8]);\n                        points.push([4, 12]);\n                        var path = new _PdfPath();\n                        if (this.color[0] === 0 && this.color[0] === 0 && this.color[0] === 0) {\n                            brush = new PdfBrush([255, 215, 0]);\n                        }\n                        graphics.save();\n                        var template_1 = new PdfTemplate([0, 0, 15, 14], this._crossReference);\n                        template_1.graphics.drawRectangle(0, 0, 15, 14, pen, brush);\n                        template_1.graphics.drawPolygon(points, pen, new PdfBrush([255, 255, 255]));\n                        path._addEllipse(2, 2, 11, 8);\n                        template_1.graphics._drawPath(path, pen, new PdfBrush([255, 255, 255]));\n                        template_1.graphics.drawArc(2, 2, 11, 8, 108, 12.7, pen1);\n                        template_1.graphics.drawLine(pen, 4, 12, 6.5, 10);\n                        graphics._drawTemplate(template_1, { x: 0, y: 0, width: this.bounds.width, height: this.bounds.height });\n                        graphics.restore();\n                    }\n                }\n            }\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== null) {\n                this._destination = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                var page = this._crossReference._document.getPage(index);\n                if (array[1] instanceof _PdfName) {\n                    var mode = array[1];\n                    if (mode) {\n                        if (mode.name === 'XYZ') {\n                            var left = array[2];\n                            var top_4 = array[3];\n                            var zoom = array[4];\n                            var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                            var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                            this._destination = new PdfDestination(page, [leftValue, topValue]);\n                            if (typeof zoom !== 'undefined' && zoom !== null) {\n                                this._destination.zoom = zoom;\n                            }\n                            if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                || (typeof zoom === 'undefined' && zoom === null)) {\n                                this._destination._setValidation(false);\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n            _this._boundsCollection.push([_this.bounds.x, _this.bounds.y, _this.bounds.width, _this.bounds.height]);\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (this._boundsCollection.length > 0) {\n                    this._quadPoints = new Array(8 + (value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var size = this._page.size;\n        this._setQuadPoints(size);\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new _PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new _PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics._drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics._drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    this._dictionary.update('Rect', [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height]);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new _PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var noofRect = this._quadPoints.length / 8;\n        for (var i = 0; i < noofRect; i++) {\n            var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n            var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n            textQuadLocation[0 + (i * 8)] = locationX;\n            textQuadLocation[1 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[3 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[4 + (i * 8)] = locationX;\n            textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] - this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n            textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createRubberStampAppearance();\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.width, bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        var isStamp = false;\n                        if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                            var isRotated = false;\n                            var size = void 0;\n                            var rect = void 0;\n                            if (appearanceStream) {\n                                isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                                    this.rotateAngle === PdfRotationAngle.angle0);\n                                if (!isRotated) {\n                                    isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                        this.rotateAngle === PdfRotationAngle.angle0);\n                                }\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            isStamp = true;\n                            isTransformBBox = isRotated ? true : false;\n                            if (isTransformBBox) {\n                                var matrix = appearanceStream.dictionary.getArray('Matrix');\n                                if (matrix) {\n                                    var mMatrix = [];\n                                    for (var i = 0; i < matrix.length; i++) {\n                                        var value = matrix[Number.parseInt(i.toString(), 10)];\n                                        mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                                    }\n                                    var bounds = appearanceStream.dictionary.getArray('BBox');\n                                    if (bounds && bounds.length > 3) {\n                                        rect = _toRectangle(bounds);\n                                        var rectangle = this._transformBBox(rect, mMatrix);\n                                        size = [rectangle[2], rectangle[3]];\n                                        this._appearanceTemplate._size = size;\n                                    }\n                                    else {\n                                        size = [rect.width, rect.height];\n                                    }\n                                }\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                        if (!isStamp) {\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this._icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        var size = this._page.size;\n        var rectangle = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n        rectangle[1] = size[1] - (this.bounds.y + this.bounds.height);\n        this._dictionary.set('Rect', [rectangle[0], rectangle[1], rectangle[0] + rectangle[2], rectangle[1] + rectangle[3]]);\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._lineEndingStyle = this._obtainLineEndingStyle();\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    //Need to code\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                var ds = 'font:' +\n                    this.font._metrics._postScriptName +\n                    ' ' +\n                    this.font._size +\n                    'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n                    ';color:' +\n                    this._colorToHex(value);\n                this._dictionary.update('DS', ds);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._updateCropBoxValues();\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._updateCropBoxValues = function () {\n        if (this._page) {\n            var cropOrMediaBox = void 0;\n            if (this._page._pageDictionary.has('CropBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('CropBox');\n            }\n            else if (this._page._pageDictionary.has('MediaBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('MediaBox');\n            }\n            if (cropOrMediaBox) {\n                this._cropBoxValueX = cropOrMediaBox[0];\n                this._cropBoxValueY = cropOrMediaBox[1];\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics._drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            //Parse XML data\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0] - rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, parameter.bounds, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new _PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path._addRectangle(this.bounds.x - 2, (this._page.size[1] - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x, (this._page.size[1] - (this.bounds.y + this.bounds.height)), this.bounds.width, this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0],\n                    size[1] - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0],\n            pageHeight - this.calloutLines[1][1],\n            this.calloutLines[0][0],\n            pageHeight - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        if (this._dictionary.has('Contents')) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC')) {\n            //this._parseXMLData();\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            //Need to add\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new _PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics._drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        this._dictionary.update('Contents', this.text);\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        var ds = 'font:' +\n            this.font._metrics._postScriptName +\n            ' ' +\n            this.font._size +\n            'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n            ';color:' +\n            this._colorToHex(this.textMarkUpColor);\n        this._dictionary.update('DS', ds);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\"><p dir=\"ltr\">';\n        this._dictionary.update('RC', body + (this.text ? this._getXmlFormattedString(this.text) : '') + '</p></body>');\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                _removeDuplicateReference(appearance, this._crossReference, 'N');\n                _removeDuplicateReference(appearance, this._crossReference, 'R');\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.middle);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, 0, 0];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined') {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    var bcArray = mkDict.getArray('BC');\n                    if (bcArray) {\n                        this._borderColor = _parseColor(bcArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics._drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics._drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        this._annotations = array;\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation._ref) {\n            var index = this._annotations.indexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('Subtype')) {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('A')) {\n            var remote = dictionary.get('A');\n            if (remote && remote.has('S')) {\n                var link = remote.get('S');\n                if (link && link.name === 'GoToR' && remote.has('F')) {\n                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                }\n                else if (link && link.name === 'URI') {\n                    annot = PdfUriAnnotation._load(this._page, dictionary);\n                }\n            }\n        }\n        else {\n            annot = PdfUriAnnotation._load(this._page, dictionary);\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        this._annotation = annotation;\n        this._isReview = isReview;\n        if (this._annotation._isLoaded || typeof annotation._page !== 'undefined') {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection = this._page.annotations;\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection = this._page.annotations;\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (annots && Array.isArray(annots)) {\n                        var widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = this.mediaBox;\n                var width = 0;\n                var height = 0;\n                if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                if (height < 0) {\n                    height = -height;\n                }\n                if (width < 0) {\n                    width = -width;\n                }\n                this._size = [width, height];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n            return (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            annots = this._getProperty('Annots');\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        var rotation = this.rotation;\n        if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n            var rotate = void 0;\n            if (this._pageDictionary.has('Rotate')) {\n                rotate = this._pageDictionary.get('Rotate');\n            }\n            else {\n                rotate = rotation * 90;\n            }\n            var clip = this._g._clipBounds;\n            if (rotate === 90) {\n                this._g.translateTransform(0, size[1]);\n                this._g.rotateTransform(-90);\n                this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n            }\n            else if (rotate === 180) {\n                this._g.translateTransform(size[0], size[1]);\n                this._g.rotateTransform(-180);\n            }\n            else if (rotate === 270) {\n                this._g.translateTransform(size[0], 0);\n                this._g.rotateTransform(-270);\n                this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n            }\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary.has('CropBox')) {\n            box = this._pageDictionary.getArray('CropBox');\n        }\n        else if (this._pageDictionary.has('MediaBox')) {\n            box = this._pageDictionary.getArray('MediaBox');\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (annots && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        var element = this._page._pageDictionary;\n        if (typeof element !== 'undefined' && element !== null) {\n            this._array.push(this._page._ref);\n        }\n        switch (this._destinationMode) {\n            case PdfDestinationMode.location:\n                this._array.push(_PdfName.get('XYZ'));\n                if (typeof page !== 'undefined' && page !== null) {\n                    this._array.push(this._location[0]);\n                    this._array.push(this._page.graphics._size[1] - this._location[1]);\n                }\n                else {\n                    this._array.push(0);\n                    this._array.push(0);\n                }\n                this._array.push(this._zoom);\n                break;\n            case PdfDestinationMode.fitToPage:\n                this._array.push(_PdfName.get('Fit'));\n                break;\n            case PdfDestinationMode.fitR:\n                this._array.push(_PdfName.get('FitR'));\n                this._array.push(this._destinationBounds[0]);\n                this._array.push(this._destinationBounds[1]);\n                this._array.push(this._destinationBounds[2]);\n                this._array.push(this._destinationBounds[3]);\n                break;\n            case PdfDestinationMode.fitH:\n                this._array.push(_PdfName.get('FitH'));\n                this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                break;\n        }\n        if (this._parent) {\n            this._parent._dictionary.set('D', this._array);\n            this._parent._dictionary._updated = true;\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _escapePdfName } from './../utils';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, forStroking) {\n        this._stream.write(\"/\" + value + \" \");\n        this._writeOperator(forStroking ? 'CS' : 'cs');\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode } from './../enumerator';\nimport { PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { _PdfPath, _PathPointType } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj instanceof _PdfReference) {\n                this._hasResourceReference = true;\n                this._resourceObject = xref._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                this._resourceObject = obj;\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(pen, brush);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var pen = void 0;\n            var brush = void 0;\n            if (first instanceof PdfPen) {\n                pen = first;\n                if (second) {\n                    brush = second;\n                }\n            }\n            else {\n                brush = first;\n            }\n            this._stateControl(pen, brush);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} startAngle value.\n     * @param {number} sweepAngle value.\n     * @param {PdfPen} pen value.\n     * @returns {void} draw a arc.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw arc on the page graphics.\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var ref;\n        if (image._reference) {\n            ref = image._reference;\n        }\n        else {\n            ref = crossReference._getNextReference();\n            image._reference = ref;\n        }\n        if (!crossReference._cacheMap.has(ref)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(ref, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n            }\n        }\n        source.update(keyName.name, ref);\n        this._resources.set(ref, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._drawTemplate = function (template, bounds) {\n        var _this = this;\n        var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n        var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n        var needScale = !(scaleX === 1 && scaleY === 1);\n        var cropBox;\n        var mediaBox;\n        if (this._page) {\n            cropBox = this._page.cropBox;\n            mediaBox = this._page.mediaBox;\n            if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                    this.translateTransform(cropBox[0], -cropBox[1]);\n                    bounds.x = -cropBox[0];\n                    bounds.y = cropBox[1];\n                }\n            }\n        }\n        var state = this.save();\n        var matrix = new _PdfTransformationMatrix();\n        if (this._page) {\n            var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n            matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n        }\n        else {\n            matrix._translate(bounds.x, -(bounds.y + bounds.height));\n        }\n        if (needScale) {\n            if (template._isAnnotationTemplate && template._needScale) {\n                var scaleApplied = false;\n                if (template._content && template._content.dictionary) {\n                    var dictionary = template._content.dictionary;\n                    if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                        var templateMatrix = dictionary.getArray('Matrix');\n                        var templateBox = dictionary.getArray('BBox');\n                        if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                            var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                            var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                            var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                            var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                            if (roundScaleX === templateScaleX &&\n                                roundScaleY === templateScaleY &&\n                                templateBox[2] === template._size[0] &&\n                                templateBox[3] === template._size[1]) {\n                                matrix = new _PdfTransformationMatrix();\n                                matrix._translate(bounds.x - templateMatrix[4], bounds.y + templateMatrix[5]);\n                                matrix._scale(1, 1);\n                                scaleApplied = true;\n                            }\n                        }\n                    }\n                }\n                if (!scaleApplied) {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            else {\n                matrix._scale(scaleX, scaleY);\n            }\n        }\n        this._sw._modifyCtm(matrix);\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        if (this._resourceObject.has('XObject')) {\n            var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n            if (obj instanceof _PdfReference) {\n                isReference = true;\n                sourceDictionary = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                sourceDictionary = obj;\n            }\n            if (sourceDictionary) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (key && key instanceof _PdfReference) {\n                        var base = _this._crossReference._fetch(key);\n                        if (base && template && base === template._content) {\n                            keyName = value;\n                            ref = key;\n                        }\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('XObject', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (template && template._content.reference) {\n                ref = template._content.reference;\n            }\n            else {\n                ref = this._crossReference._getNextReference();\n            }\n            if (!this._crossReference._cacheMap.has(ref)) {\n                if (template && template._content) {\n                    this._crossReference._cacheMap.set(ref, template._content);\n                }\n            }\n            sourceDictionary.update(keyName.name, ref);\n            this._resources.set(ref, keyName);\n            this._resourceObject._updated = true;\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._executeObject(keyName);\n        this.restore(state);\n        _addProcSet('ImageB', this._resourceObject);\n        _addProcSet('ImageC', this._resourceObject);\n        _addProcSet('ImageI', this._resourceObject);\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._drawPath = function (path, pen, brush) {\n        if (pen || brush) {\n            this._stateControl(pen, brush, null);\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(pen, brush, path._fillMode, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} radius value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @returns {void} draw a rounded rectangle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Create a new brush.\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * //Draw rounded rectangle on the page graphics.\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new _PdfPath();\n        if (radius === 0) {\n            path._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this._drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path._closeFigure();\n            this._drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(pattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value draw string.\n     * @param {PdfFont} font value.\n     * @param {number[]} bounds value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @param {PdfStringFormat} format value.\n     * @returns {void} draw a string.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font.\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics.\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case _PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case _PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case _PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & _PathPointType.closePath) === _PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== _PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var fontDict;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (typeof fontDict !== 'undefined' && fontDict !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (key !== null && typeof key !== 'undefined') {\n                        var dictionary = _this._crossReference._fetch(key);\n                        if (dictionary && dictionary === font._dictionary) {\n                            keyName = value;\n                            ref = key;\n                        }\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', fontDict);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                ref = this._crossReference._getNextReference();\n            }\n            if (font._dictionary) {\n                this._crossReference._cacheMap.set(ref, font._dictionary);\n                fontDict.update(keyName.name, ref);\n                this._resources.set(ref, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                }\n                fontDict.update(keyName.name, ref);\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                verticalAlignShift);\n            this._sw._modifyTM(matrix);\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex < pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        if (pen != null && brush != null) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 ||\n            format.alignment === PdfTextAlignment.justify));\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format != null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.justify));\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draw line on the page graphics.\n     *\n     * @param {PdfPen} pen pen value.\n     * @param {number} x1 value.\n     * @param {number} y1 value.\n     * @param {number} x2 value.\n     * @param {number} y2 value.\n     * @returns {void} draw a line.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw line on the page graphics.\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} scale transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics scale transform.\n     * graphics.scaleTransform(0.5, 0.5);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} translate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees\n     * @returns {void} rotate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics rotate transform.\n     * graphics.rotateTransform(-90);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region.\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} clipping region.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set clip.\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Represents a transparency of this graphics.\n     *\n     * @param {number} stroke transparency value.\n     * @param {number} fill transparency value.\n     * @param {PdfBlendMode} mode blend mode.\n     * @returns {void} transparency of this graphics.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set transparency.\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary.has('CA')) {\n            stroke = dictionary.get('CA');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('BM')) {\n            mode = _mapBlendMode(dictionary.get('BM'));\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics\n * let state: PdfGraphicsState = graphics.save();\n * //Set graphics translate transform.\n * graphics.translateTransform(100, 100);\n * //Draws the String.\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * //Restore the graphics.\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = this.getBytes();\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        _this._bytes = bytes;\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (cipherTransform) {\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    return this.makeInlineImage(cipherTransform);\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        array.push(this.getObject(cipherTransform));\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        dictionary.set(key, this.getObject(cipherTransform));\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            return this.makeStream(dictionary, cipherTransform);\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            dictionary.set(key, this.getObject(cipherTransform));\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (cipherTransform) {\n            stream = cipherTransform.createStream(stream, length);\n        }\n        stream = this.filter(stream, dictionary, length);\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O')).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U')).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'));\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'));\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'));\n            var userEncryption = _stringToBytes(dictionary.get('UE'));\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        return _bytesToString(this._stringCipher._decryptBlock(_stringToBytes(s), true));\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        this._nextReferenceNumber = trailerDictionary.get('Size');\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, suppressEncryption) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !suppressEncryption) {\n            entry = parser.getObject(this._encrypt._createCipherTransform(reference.objectNumber, reference.generationNumber));\n        }\n        else {\n            entry = parser.getObject();\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var _this = this;\n        var currentLength = this._stream.length;\n        var buffer = [this._newLine.charCodeAt(0), this._newLine.charCodeAt(1), 37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        var updatedCount = 0;\n        var uncompressedCount = 0;\n        if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            var data = [];\n            var updatedStream_1 = [];\n            var archiveXRef_1 = '';\n            var indexes_1 = [];\n            indexes_1.push(0, 1);\n            var collection_1 = [];\n            var uncompressedOffsets_1 = [];\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    indexes_1.push(key.objectNumber, 1);\n                    uncompressedOffsets_1.push(currentLength + buffer.length);\n                    var cipher_1;\n                    if (_this._encrypt) {\n                        cipher_1 = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    _this._writeObject(value, buffer, key, cipher_1);\n                    uncompressedCount++;\n                    dictionary._updated = false;\n                }\n            });\n            this._cacheMap.forEach(function (value, key) {\n                if (value instanceof _PdfDictionary) {\n                    if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                        archiveXRef_1 += key.objectNumber + \" \" + updatedStream_1.length + _this._newLine;\n                        collection_1.push(key.objectNumber, 1);\n                        updatedCount++;\n                        _this._writeObject(value, updatedStream_1);\n                    }\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    var dictionary = value.dictionary;\n                    if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                        indexes_1.push(key.objectNumber, 1);\n                        uncompressedOffsets_1.push(currentLength + buffer.length);\n                        _this._writeObject(value, buffer, key);\n                        uncompressedCount++;\n                        dictionary._updated = false;\n                    }\n                }\n            });\n            for (var i = 0; i < collection_1.length; i++) {\n                indexes_1.push(collection_1[parseInt(i.toString(), 10)]);\n            }\n            var archiveOffset = void 0;\n            var archiveRef = void 0;\n            if (updatedCount > 0) {\n                archiveRef = this._getNextReference();\n                indexes_1.push(archiveRef.objectNumber, 2);\n                this._writeString(archiveXRef_1, data);\n                this._writeBytes(updatedStream_1, data);\n                var newDict = new _PdfDictionary(this);\n                newDict.set('Type', _PdfName.get('ObjStm'));\n                newDict.set('N', updatedCount);\n                newDict.set('First', archiveXRef_1.length);\n                newDict.set('Length', data.length);\n                var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n                archiveOffset = currentLength + buffer.length;\n                var cipher_2;\n                if (this._encrypt) {\n                    cipher_2 = this._encrypt._createCipherTransform(archiveRef.objectNumber, archiveRef.generationNumber);\n                }\n                this._writeObject(archiveStream, buffer, archiveRef, cipher_2);\n            }\n            var newRef = this._getNextReference();\n            var newStartXref = currentLength + buffer.length;\n            var newXref = new _PdfDictionary(this);\n            newXref.set('Type', _PdfName.get('XRef'));\n            newXref.set('Index', indexes_1);\n            newXref.set('W', [1, 3, 1]);\n            this._copyTrailer(newXref);\n            if (this._ids && this._ids.length > 0) {\n                newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n            }\n            var newXrefData = [];\n            this._writeLong(0, 1, newXrefData);\n            this._writeLong(1, 3, newXrefData);\n            this._writeLong(-1, 1, newXrefData);\n            if (uncompressedCount > 0) {\n                for (var index = 0; index < uncompressedCount; index++) {\n                    this._writeLong(1, 1, newXrefData);\n                    this._writeLong(uncompressedOffsets_1[index], 3, newXrefData); // eslint-disable-line\n                    this._writeLong(0, 1, newXrefData);\n                }\n            }\n            if (updatedCount > 0) {\n                for (var index = 0; index < updatedCount; index++) {\n                    this._writeLong(2, 1, newXrefData);\n                    this._writeLong(archiveRef.objectNumber, 3, newXrefData);\n                    this._writeLong(index, 1, newXrefData);\n                }\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(archiveOffset, 3, newXrefData);\n                this._writeLong(0, 1, newXrefData);\n            }\n            this._writeLong(1, 1, newXrefData);\n            this._writeLong(newStartXref, 3, newXrefData);\n            this._writeLong(0, 1, newXrefData);\n            newXref.set('Length', newXrefData.length);\n            var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n            var cipher = void 0;\n            if (this._encrypt) {\n                cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n            }\n            this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        else {\n            var tempBuffer_1 = '';\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfDictionary) {\n                    dictionary = value;\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    var offsetString = (currentLength + buffer.length).toString();\n                    while (offsetString.length < 10) {\n                        offsetString = '0' + offsetString;\n                    }\n                    var genString = key.generationNumber.toString();\n                    while (genString.length < 5) {\n                        genString = '0' + genString;\n                    }\n                    tempBuffer_1 += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                    updatedCount++;\n                    _this._writeObject(value, buffer, key);\n                }\n            });\n            var newStartXref = buffer.length + currentLength;\n            this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n            if (updatedCount > 0) {\n                this._writeString(tempBuffer_1, buffer);\n            }\n            this._writeString(\"trailer\" + this._newLine, buffer);\n            var newXref = new _PdfDictionary(this);\n            this._copyTrailer(newXref);\n            this._writeDictionary(newXref, buffer, this._newLine);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        var array = new Uint8Array(this._stream.length + buffer.length);\n        array.set(this._stream.bytes);\n        array.set(buffer, this._stream.length);\n        return array;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        newXref.set('Size', this._nextReferenceNumber);\n        newXref.set('Prev', this._prevStartXref);\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, buffer, reference, transform, isCrossReference) {\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var streamBuffer = [];\n        var value = stream.getString();\n        if (!isCrossReference) {\n            var byteArray = [];\n            for (var i = 0; i < value.length; i++) {\n                byteArray.push(value.charCodeAt(i));\n            }\n            if (stream._isCompress) {\n                var dataArray = new Uint8Array(byteArray);\n                var sw = new CompressedStreamWriter();\n                sw.write(dataArray, 0, dataArray.length);\n                sw.close();\n                value = sw.getCompressedString;\n                stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        this._pendingRefs.clear();\n        this._pendingRefs = undefined;\n        this._cacheMap.clear();\n        this._pendingRefs = undefined;\n        this._root = undefined;\n        this._startXRefQueue = [];\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                if (key) {\n                    switch (key.name.toLowerCase()) {\n                        case 'tx':\n                            field = PdfTextBoxField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                        case 'btn':\n                            if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                                field = PdfButtonField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfCheckBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'ch':\n                            if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                                field = PdfComboBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfListBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'sig':\n                            field = PdfSignatureField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                    }\n                }\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._allowCatalog = true;\n        this._crossReference._root._updated = true;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var item = field.itemAt(i);\n                var page = item._page;\n                page.annotations._annotations.push(item._ref);\n                page._pageDictionary.set('Annots', page.annotations._annotations);\n                page._pageDictionary._updated = true;\n            }\n        }\n        else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n            var page = field._page;\n            page.annotations._annotations.push(field._ref);\n            field._page._pageDictionary.set('Annots', field.page.annotations._annotations);\n            field._page._pageDictionary._updated = true;\n        }\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = item._getPage();\n                    if (page) {\n                        page._removeAnnotation(item._ref);\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._dictionary.update('NeedAppearances', value);\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (this._fieldCollection && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (typeof fieldDictionary !== 'undefined') {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        this._fields.push(ref);\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (typeof kids !== 'undefined' && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (typeof entry !== 'undefined' && entry !== null) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (typeof dictionary !== 'undefined' && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (typeof kidDictionary !== 'undefined' && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && page1 instanceof PdfPage && page2 && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none || this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (kids && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                this._writeArray(writer, dictionary.getArray(key), dictionary);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = primitive.getString(true);\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                case 'TextMarkupContent':\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _convertStringToBytes, _bytesToString, _hexStringToByteArray, _decode } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            for (var i = 0; i < key.length; i++) {\n                _this._jsonData.push(key.charCodeAt(i));\n            }\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                for (var i = 0; i < value.length; i++) {\n                    _this._jsonData.push(value.charCodeAt(i));\n                }\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _convertStringToBytes(i.toString(), []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _convertStringToBytes(this._convertToJson(this._table), this._jsonData);\n                    if (k < page.annotations.count - 1) {\n                        this._jsonData.push(this._comma);\n                    }\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (value) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive.indexOf('\"') !== -1) {\n                    primitive = primitive.replace(/\"/g, '\\\\\"');\n                }\n                this._table.set(key, primitive);\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'RC':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n            case 'TextMarkupContent':\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            case 'CustomData':\n                if (primitive && primitive.length > 2 && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n            default:\n                this._writeAttributeString(key, primitive);\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (vertices && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                this._exportMeasureFormatDetails('area', array[0]);\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                this._exportMeasureFormatDetails('distance', array[0]);\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                this._exportMeasureFormatDetails('xformat', array[0]);\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                this._exportMeasureFormatDetails('tformat', array[0]);\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                this._exportMeasureFormatDetails('vformat', array[0]);\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails.has('C')) {\n            details.set('c', this._getValue(measurementDetails.get('C'), true));\n        }\n        if (measurementDetails.has('F')) {\n            details.set('f', this._getValue(measurementDetails.get('F'), true));\n        }\n        if (measurementDetails.has('D')) {\n            details.set('d', this._getValue(measurementDetails.get('D'), true));\n        }\n        if (measurementDetails.has('RD')) {\n            details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n        }\n        if (measurementDetails.has('U')) {\n            details.set('u', this._getValue(measurementDetails.get('U'), true));\n        }\n        if (measurementDetails.has('RT')) {\n            details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n        }\n        if (measurementDetails.has('SS')) {\n            details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n        }\n        if (measurementDetails.has('FD')) {\n            details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array) {\n        if (value instanceof _PdfName) {\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var array_1 = [];\n            this._writeArray(array_1, value, dictionary);\n            this._writeTable('array', this._convertToJsonArray(array_1), table, key, array_1);\n        }\n        else if (typeof value === 'string') {\n            this._writeTable('string', value, table, key, array);\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = value.getString(true);\n            if (!streamDictionary.has('Length') && data && data !== '') {\n                streamDictionary.update('Length', value.length);\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += '\"' + key + '\":\"' + value + '\"';\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'customdata':\n                    _this._addString(dictionary, 'CustomData', typeof value === 'string' ? value : JSON.stringify(value));\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    _this._addString(dictionary, 'AllowedInteractions', value);\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, value);\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            value = this._crossReference._getNextReference();\n            dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, dictionary);\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (this._annotationObjects !== null && typeof this._annotationObjects !== 'undefined' && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (this._table !== null && typeof this._table !== 'undefined' && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary !== null && typeof pageDictionary !== 'undefined') {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (dictionary.has('NM')) {\n                            var name_1 = dictionary.get('NM');\n                            if (name_1 !== null) {\n                                _this.fdfString += '(' + _this._getFormattedString(name_1) + ')';\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (array !== null && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var bookmark = this._getFirstBookmark(this);\n        var isBookmark = (bookmark) ? true : false;\n        while (isBookmark && bookmark._dictionary) {\n            this._bookMarkList.push(bookmark);\n            bookmark = bookmark._next;\n            isBookmark = (bookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getFirstBookmark = function (bookmarkBase) {\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has('First')) {\n            var bookMarkDictionary = bookmarkBaseDictionary.get('First');\n            if (bookMarkDictionary) {\n                bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (!_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination (Read only).\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var namedDestination = this._obtainNamedDestination();\n            if (namedDestination === null || typeof namedDestination === 'undefined') {\n                value = this._obtainDestination();\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination (Read only).\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title (Read only).\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                this._title = this._obtainTitle();\n            }\n            return this._title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color (Read only).\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the textStyle (Read only).\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not (Read only).\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Count')) {\n                var value = this._dictionary.get('Count');\n                if (value >= 0) {\n                    return true;\n                }\n            }\n            return this._isExpanded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary.has('Next')) {\n                var dictionary = this._dictionary.get('Next');\n                if (dictionary) {\n                    nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainTitle = function () {\n        var value = '';\n        if (this._dictionary.has('Title')) {\n            value = this._dictionary.get('Title');\n        }\n        return value;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary.has('A')) {\n                var action = dictionary.get('A');\n                if (action.has('D')) {\n                    destination = action.get('D');\n                }\n            }\n            else if (dictionary.has('Dest')) {\n                destination = dictionary.get('Dest');\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    PdfBookmark.prototype._obtainDestination = function () {\n        var bookMarkDictionary = this._dictionary;\n        var page;\n        if (bookMarkDictionary && bookMarkDictionary.has('Dest')) {\n            var destinationArray = bookMarkDictionary.getArray('Dest'); // eslint-disable-line\n            var loadedDocument = this._crossReference._document;\n            var mode = void 0;\n            if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                var value = destinationArray[0]; // eslint-disable-line\n                var left = void 0;\n                var height = void 0;\n                var bottom = void 0;\n                var right = void 0;\n                var zoom = void 0;\n                if (typeof value === 'number') {\n                    var pageNumber = destinationArray[0];\n                    if (pageNumber >= 0) {\n                        var document_1 = this._crossReference._document;\n                        if (document_1 && document_1.pageCount > pageNumber) {\n                            page = document_1.getPage(pageNumber);\n                        }\n                        if (destinationArray.length > 1) {\n                            mode = destinationArray[1];\n                        }\n                        if (mode && mode.name === 'XYZ') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                height = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                zoom = destinationArray[4];\n                            }\n                            if (page) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                if (page.rotation !== PdfRotationAngle.angle0) {\n                                    _checkRotation(page, height, left);\n                                }\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                this._destination._index = pageNumber;\n                                this._destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                    || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (value instanceof _PdfDictionary) {\n                    var pageDictionary = value;\n                    var index = void 0;\n                    if (loadedDocument && pageDictionary) {\n                        index = _getPageIndex(loadedDocument, pageDictionary);\n                    }\n                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                        page = loadedDocument.getPage(index);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode) {\n                        if (mode.name === 'XYZ') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                height = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                zoom = destinationArray[4];\n                            }\n                            if (page) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                if (page.rotation !== PdfRotationAngle.angle0) {\n                                    topValue = _checkRotation(page, height, left);\n                                }\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                this._destination._index = index;\n                                this._destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                    typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (mode.name === 'FitR') {\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    bottom = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    right = destinationArray[4];\n                                }\n                                if (destinationArray.length > 5) {\n                                    height = destinationArray[5];\n                                }\n                                if (page) {\n                                    left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                    height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                    right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                    this._destination = new PdfDestination(page, [left, bottom, right, height]);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitR;\n                                }\n                            }\n                            else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                    page = loadedDocument.getPage(index);\n                                }\n                                if (page && page.size) {\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                    this._destination = new PdfDestination(page, [0, topValue]);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitH;\n                                    if (height === null || typeof height === 'undefined') {\n                                        this._destination._setValidation(false);\n                                    }\n                                }\n                            }\n                            else {\n                                if (page && mode.name === 'Fit') {\n                                    this._destination = new PdfDestination(page);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitToPage;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNamedDestination` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Destination dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfNamedDestination(dictionary, crossReference) {\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        var destinationElement = destinationArray[Number.parseInt(i.toString(), 10)];\n                        this._addCollection(destinationElement);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog && catalog._catalogDictionary.has('Outlines')) {\n                var outlines = catalog._catalogDictionary.get('Outlines');\n                if (outlines) {\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    if (outlines.has('First')) {\n                        this._bookmarkBase._reproduceTree();\n                    }\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        this._pages.clear();\n        this._pages = undefined;\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this.form._doPostProcess(isFlatten);\n        if (isFlatten) {\n            var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary._updated = true;\n            if (formObject instanceof _PdfReference) {\n                this._crossReference._cacheMap.set(formObject, dictionary);\n            }\n            else {\n                this.form._dictionary = dictionary;\n                this._crossReference._allowCatalog = true;\n            }\n            this.form._clear();\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","import { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_ImageDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _ImageDecoder(stream) {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n        this._stream = stream;\n        this._initialize();\n    }\n    Object.defineProperty(_ImageDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _ImageDecoder.prototype._initialize = function () {\n        if (this._format === _ImageFormat.unknown && this._checkIfJpeg()) {\n            this._format = _ImageFormat.jpeg;\n            this._parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._parseJpegImage = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _ImageDecoder.prototype._checkIfJpeg = function () {\n        this._reset();\n        for (var i = 0; i < _ImageDecoder._jpegHeader.length; i++) {\n            if (_ImageDecoder._jpegHeader[Number.parseInt(i.toString(), 10)] !== this._getBuffer(i)) {\n                return false;\n            }\n            this._position++;\n        }\n        return true;\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this._position;\n            buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n            this._position++;\n        }\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _ImageDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _ImageDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _ImageDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    _ImageDecoder._jpegHeader = [255, 216];\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './../../graphics/images/image-decoder';\nimport { PdfImage } from './pdf-image';\nimport { _decode } from './../../utils';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = new _ImageDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n"],"names":["_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","i","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","value","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","length","code","String","fromCharCode","charAt","isDirect","bytes","Uint8Array","_convertStringToBytes","destination","_areArrayEqual","first","second","Number","parseInt","toString","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","apply","stringBuffer","chunkEnd","Math","min","chunk","subarray","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decode","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","_i","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","max","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","start","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","j","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","set","matrix","_PdfTransformationMatrix","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","regular","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_encodeValue","hex","_getCommentsOrReview","annotation","isReview","reviewHistory","comments","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","end","_checkInkPoints","inkPointsCollection","previousCollection","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","PdfDestinationMode","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","this","_initialize","bounds","_size","_isReadOnly","_PdfContentStream","_writeTransformation","defineProperty","_g","PdfGraphics","_initializeCoordinates","_isTemplateGraphics","enumerable","configurable","PdfStringFormat","arg1","arg2","horizontalScalingFactor","rightToLeft","_wordWrapType","word","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","top","characterSpacing","wordSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getSize","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","Error","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","from","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_doLayout","_clear","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","builder","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_whiteSpace","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","offset","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","unicode","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","floor","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_index","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","right","bottom","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte1","byte2","byte3","byte4","_writeBytes","buff","i_1","written","read","_createInternals","charCode","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","data","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_write","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","shapeText","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","_reArrange","pstart","pend","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","byte","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg3","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_calculateStyle","iStyle","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","fontBox","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","fontBoxItalic","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","_PdfPath","_isRoundedRectangle","_fillMode","winding","_points","_pathTypes","_isStart","_addLine","_addPoints","_PathPointType","_addLines","linePoints","_addPoint","startIndex","endIndex","_lastPoint","_addArc","startAngle","sweepAngle","list","bezier","_addRectangle","_startFigure","_closeFigure","_addPolygon","newPoints","_addEllipse","_addBezierPoints","pointsCollection","inner1","inner2","_addBezier","firstX","firstY","secondX","secondY","endX","endY","closePath","_getBounds","xmin","xmax","ymin","ymax","_visible","_isTransparentBackColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_kids","_form","names","_actualName","name_1","_mappingName","name_2","mappingName","_alternateName","name_3","toolTip","_isLoaded","itemAt","_defaultIndex","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","_page","rotate","_kidsCount","_defaultAppearance","_da","isNew","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","borderColor","_mkDictionary","colorArray","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","angle0","rotationAngle","noExport","index1","_ref","_tabIndex","_tabOrder","manual","tabOrder","annotationCollection","PdfAnnotationCollection","_annotations","_annotationIndex","annotations","document_1","_document","widgetRef","_gray","PdfBrush","_silver","_white","_black","mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","splice","parsedItems_1","removeItem","da","bs","dash","_checkFieldFlag","_initializeFont","resource","fontDict","isReference","keyName","_getNextReference","_fontName","fontName","_drawRectangularControl","parameter","drawRectangle","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","drawLine","brush","path","_drawPath","_drawRadioButton","graphics","checkSymbol","unchecked","drawEllipse","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","_color","leftTop","rightBottom","PdfPen","drawArc","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","save","size_1","translateTransform","rotateTransform","z","drawString","center","middle","restore","_addToKid","currentIndex","_drawTemplate","_sw","_setTextRenderingMode","_TextRenderingMode","fill","_addToOptions","PdfListBoxField","_listValues","_options","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getAppearanceStateValue","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","PdfTextBoxField","_autoResizeText","_defaultValue","multiLine","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","source","appearanceStream","_PaintParameter","backcolor","insertSpaces","_beginMarkupSequence","_drawTextBox","scrollable","_endMarkupSequence","multiline","scroll","startlocation","isAutoFontSize","_assignText","fieldDictionary","pushButton","pressed","isPressed","_drawPressedButton","_drawButton","PdfCheckBoxField","PdfStateItem","V","AS","_drawAppearance","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","PdfRadioButtonListField","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","selectedIndex","name_5","PdfRadioButtonListItem","_field","_setField","parsedItems_2","options","radio","_optionValue","checkName","asName","PdfListField","_bounds","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","endsWith","_getFontHeight","isNaN","_obtainSelectedValue","primitive","selectedIndexes","PdfComboBoxField","combo","acroForm","fontString","verticalAlignment","stringFormat","_drawComboBox","location_1","doubleBorderWidth","padding","setClip","itemTextBound","x_3","itemFont","widths_1","textSize","h","textWidth","_drawListBox","this_1","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isImported","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","setTransparency","_removeAnnotationFromPage","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","lineAnnotation","_needInitializeGraphics","rubberStampAnnotation","needScale","_isAnnotationTemplate","_needScale","scaleX","scaleY","_origin","_o","radians","_drawCloudStyle","pen","radius","overlap","isAppearance","_isClockWise","sortedPoints","circles","circleOverlap","previousPoint","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","_dashStyle","_dashPattern","intensity","_createRectangleAppearance","borderEffect","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_pen","_stateControl","_buildUpPath","_drawGraphicsPath","drawPolygon","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","measureDictionary","_colorToHex","col","_componentToHex","_getRotatedBounds","rotateAngle","corners","_transform","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","subject","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","content","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","cropBoxOrMediaBox","PdfComment","_comments","PdfPopupAnnotationCollection","_reviewHistory","PdfLineAnnotation","_unit","_unitString","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","flatten","_appearanceTemplate","_createLineMeasureAppearance","boundsArray","_obtainLineBounds","updatedBounds","flattenPopups","measure","reference_1","_isFlatten","area","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","pow","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","_drawLine","rectangleBounds","distance","_PdfUnitConvertor","_convertUnits","PdfCircleAnnotation","_measureType","diameter","circleAnnotation","_createCircleMeasureAppearance","reference_2","fontsize","_template","rect1","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","vertices","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","polygonPoints","pageSize","points_1","points_2","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","endLineStyle","beginLineStyle","pathTypes","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","PdfAngleMeasurementAnnotation","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","inkAnnotation","inkList","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","inkPoints","pathPointCont","pathPoints","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","_lineCap","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","popupAnnotation","_obtainIconName","_createPopupAppearance","pen1","template_1","PdfFileLinkAnnotation","fileName","_fileName","fileLinkAnnotation","_action","action","actionDictionary","_addAction","nextAction","fileDictionary","PdfUriAnnotation","uri","_uri","uriAnnotation","linkDict","PdfDocumentLinkAnnotation","documentLinkAnnotation","_obtainDestination","_destination","_addDocument","holder","pageNumber","top_3","zoom","leftValue","PdfDestination","_setValidation","fitToPage","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_array","PdfTextWebLinkAnnotation","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","_brush","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","_stream","fileAttachmentAnnotation","_addAttachment","fileSpecification","embeddedFile","fileSpectDictionary","paramsDictionary","toTimeString","_newLine","_writeObject","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","pathPointsCount","location","zigZag","textQuadLocation","noofRect","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","PdfRubberStampAnnotation","_stampWidth","_stampAppearanceFont","_appearance","innerBounds","_obtainInnerBounds","_createRubberStampAppearance","_transformBBox","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","mMatrix","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","scaleTransform","rubberFont","_drawRubberStamp","drawRoundedRectangle","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","freeTextAnnotation","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","startsWith","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_setPaddings","paddings","_paddings","_updateCropBoxValues","_saveFreeTextDictionary","cropOrMediaBox","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","first_2","second_2","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","markUpText","_rcText","hasAlignment","justify","pointY","pointX","annotationIntent","_getXmlFormattedString","markupText","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","normalTemplate","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","bcArray","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_9","document_2","_backColor","_initializeItem","option","_getBorderEffect","_styleToEffect","xref","_parsedAnnotations","at","_parseAnnotation","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","remove","removeAt","_getProperty","actualIndex","_reorderParsedAnnotations","_processResources","_updateChildReference","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","annotationDictionary","parentReference","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","map","remaining","clear","PdfPage","pageIndex","_isAnnotationParsed","_pageIndex","widgets_1","_parseWidgetReferences","validAnnotations_1","_rotation","_obtainTabOrder","tabs","column","structure","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","mbox","cbox","cx","cy","crx","cry","_cropBox","_mediaBoxUpperRightBound","_graphicsState","origin","sign","clip","_clipBounds","_fetchResources","_resourceObject","_hasResourceReference","_getCropOrMediaBox","_destroy","_location","_destinationMode","_zoom","_isValid","_destinationBounds","_initializePrimitive","fitR","fitH","_parent","_PdfStreamWriter","_writeOperator","write","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","forStroking","_setColor","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_showText","_writeText","string","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","_showNextLineText","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_bytes","currentData","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","needSave","drawImage","horizontalResolution","ucX","ucY","pixel","_pendingResource","_source","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_doRestore","pop","_transformationMatrix","_constructArcPath","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","_updateImageResource","image","_reference","_imageStream","_resources","needTransform","_translate","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_scale","base","arc","sweep","_writePen","_dashOffset","_lineJoin","_miterLimit","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","internal","layoutRectangle","shouldClip","clipRegion","clipBounds","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","tm","fillStroke","stroke","clipFlag","cs","ws","ttfFont","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","layoutedRectangle","fillMode","needClosing","isBrush","isPen","alternate","needTransformation","_multiply","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_Matrix","arg6","_clone","slice","_offsetX","_offsetY","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","BaseException","message","FormatError","ParserEndOfFileException","objectNumber","gen","generationNumber","_PdfReferenceSet","parent","_set","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_a","_b","_c","property","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","_isCompress","getByte","getBytes","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","getString","isHex","skip","getBaseStreams","arrayBuffer","isImageStream","dataStream2","strEnd","Filter","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getName","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","test","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","bufferLength","minBufferLength","ensureBuffer","requested","byteLength","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_cipher","_nextChunk","_initialized","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","bits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_catalogDictionary","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","count_1","kids","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","bitMask","kk","prevRow","upLeft","pa","pb","pc","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","done","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","imageCache","refill","tryShift","cipherTransform","makeInlineImage","_checkEnd","makeStream","decryptString","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filter","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","createStream","bytesLength","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","makeFilter","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","ii","endOffset","_Linearization","isValid","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","remainder","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","encryptString","pad","repeat","crypto","getRandomValues","_PdfCrossReference","_entries","_crossReferencePosition","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_parse","trailerDictionary","_indexObjects","_readXRef","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","_fileStructure","_crossReferenceType","root","hasRoot","_root","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","currentLength","updatedCount","uncompressedCount","updatedStream_1","archiveXRef_1","indexes_1","collection_1","uncompressedOffsets_1","_allowCatalog","cipher_1","archiveOffset","archiveRef","newDict","archiveStream","cipher_2","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","newXrefStream","tempBuffer_1","offsetString","genString","_writeDictionary","now","crossReferenceInfo","transform","isCrossReference","_writeStream","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","dataArray","sw","CompressedStreamWriter","close","getCompressedString","value_1","_escapeString","PdfForm","_hasKids","_exportEmptyFields","_fieldCollection","_signFlag","_parsedFields","_fields","_createFields","_needAppearances","fieldAt","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","page_1","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","nodes","fieldKids","kidsDict","_isNode","isNode","subtype","_widgetReferences","fieldReference","kidReference","kidDictionary","_getFieldIndex","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","fieldName","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_XmlWriter","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","previousTop","_ExportHelper","_asPerSpecification","_formKey","_groupReferences","_groupHolders","_richTextPrefix","_table","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","_getEncodedValue","selectedValue","_getExportValue","radioButton","_exportFormFieldData","replaceValue","_getAnnotationType","_getValue","isJson","_getValidString","_getColor","kid","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_addReferenceToGroup","_handlePopup","popupReference","popup","_importField","richTextValue","_importFieldData","selectedValues_1","options_1","AP","lowerCase","_containsExportValue","_checkSelected","asEntry","toLocaleLowerCase","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","parentElements","newTable","_writeAnnotationData","hasAppearance","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","fsDictionary","efDictionary","fStream","fDictionary","elementCount","_writeRawData","defaultStyle","textWriter","_writeAppearanceDictionary","_writePrefix","_writeArray","streamDictionary","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","parentElement","dataValues","textContent","richText","innerHTML","hasAttributes","_getAnnotationDictionary","isValidType","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","childElement","popupDictionary","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","inkChild","inkChildElement","pointsArray_1","_addStreamData","raw","_addFileAttachment","_addSound","soundStream","soundReference","fileStream","param","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getBoolean","_getData","isImage","Length","_addArrayElements","floatValue","intValue","bool","measurement","xformat","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","isAnnotationAdded","_exportAnnotation","_convertToJson","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","vertice","json","details","parentTable","appearanceTable","_writeTable","array_1","_convertToJsonArray","dataTable","streamTable","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","outColor","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","styleKey","styleValue","gestureKeys","gesture","stringify","dashArray","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","dataKeys","byteString","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","_appendElement","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","_getFirstBookmark","isBookmark","_next","bookmarkBase","bookMark","bookmarkBaseDictionary","bookMarkDictionary","PdfBookmark","destinationArray","namedDestination","_obtainNamedDestination","_namedDestination","_title","_obtainTitle","_textStyle","_obtainTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","destinationElement","destinationObject","_XmlDocument","_checkXml","tagName","xmlDocument","PdfFileStructure","PdfDocument","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_pages","_checkHeader","_startXRef","_linear","err","_linearization","_find","startXRefLength","found","_pageCount","_catalog","catalog","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","settings","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","Annots","_addWatermarkText","_exportAppearance","_exportName","_PdfPaddings","_ImageDecoder","_bitsPerComponent","_noOfComponents","_imageData","_checkIfJpeg","TypeError","jpeg","_parseJpegImage","_reset","imgData","_getBuffer","isLengthExceed","_seek","_readExceededJpegImage","_jpegHeader","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","_toUnsigned16","skippedByte","marker","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder"],"mappings":"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gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,OACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,OACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,OACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,OACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,OACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,OACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,KAAM,MACpChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,OACrChN,KAAKymB,gBAAgBzZ,SAAS,MAAO,MACrChN,KAAKymB,gBAAgBzZ,SAAS,KAAO,OACrChN,KAAKymB,gBAAgBzZ,S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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE/EzC,EAA+BkE,kBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,E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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAET9D,EAA+BsD,6BAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAETtD,EAA+BsE,cAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCtE,EAA+B0E,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,I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ACjB,EAAS,EAAS,EAAS,EAAS,MAAS,MAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,SAE7CG,IACA,GAAIH,aACA,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,KAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,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"}