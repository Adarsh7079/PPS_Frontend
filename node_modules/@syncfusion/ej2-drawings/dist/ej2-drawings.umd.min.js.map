{"version":3,"file":"ej2-drawings.umd.min.js","sources":["../src/drawing/primitives/matrix.js","../src/drawing/utility/dom-util.js","../src/drawing/utility/base-util.js","../src/drawing/utility/path-util.js","../src/drawing/rendering/svg-renderer.js","../src/drawing/utility/diagram-util.js","../src/drawing/core/appearance.js","../src/drawing/enum/enum.js","../src/drawing/primitives/size.js","../src/drawing/primitives/rect.js","../src/drawing/core/elements/drawing-element.js","../src/drawing/core/containers/container.js","../src/drawing/core/elements/text-element.js","../src/drawing/core/containers/canvas.js","../src/drawing/core/elements/image-element.js","../src/drawing/core/elements/path-element.js","../src/drawing/primitives/point.js","../src/drawing/rendering/canvas-renderer.js","../src/drawing/rendering/renderer.js"],"sourcesContent":["/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[parseInt(i.toString(), 10)];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    var path = 'pathTable';\n    // eslint-disable-next-line\n    if (!window[path]) {\n        // eslint-disable-next-line\n        window[path] = {};\n    }\n    if (data) {\n        var measureElement = 'measureElement';\n        // eslint-disable-next-line\n        window[measureElement].style.visibility = 'visible';\n        // eslint-disable-next-line\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        //let bounds: SVGRect = element.getBBox();\n        var bounds = void 0;\n        // eslint-disable-next-line\n        if (window[path][data]) {\n            // eslint-disable-next-line\n            bounds = window[path][data];\n        }\n        else {\n            // eslint-disable-next-line\n            window[path][data] = bounds = element.getBBox();\n            if ((bounds.x === 0 || bounds.y === 0) && (bounds.width === 0 || bounds.height === 0)) {\n                // eslint-disable-next-line\n                window[path][data] = bounds = getBBox(data);\n            }\n        }\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        // eslint-disable-next-line\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\n// tslint:disable-next-line\nfunction getBBox(path) {\n    var xmin = 0;\n    var xmax = 0;\n    var ymin = 0;\n    var ymax = 0;\n    // tslint:disable-next-line\n    var currentValue;\n    // tslint:disable-next-line\n    var currentpath = path;\n    currentpath = currentpath.replace(/[a-z].*/g, ' ').replace(/[\\sA-Z]+/gi, ' ').trim().split(' ');\n    for (var i = 0; i < currentpath.length; i++) {\n        if (currentpath[parseInt(i.toString(), 10)].length > 1) {\n            currentValue = currentpath[parseInt(i.toString(), 10)].split(',');\n            xmin = xmax = currentValue[0];\n            ymin = ymax = currentValue[1];\n        }\n    }\n    for (var i = 0; i < currentpath.length; i++) {\n        currentValue = currentpath[parseInt(i.toString(), 10)].split(',');\n        if (!currentValue[1]) {\n            currentValue[0] = xmin;\n            currentValue[1] = ymin;\n        }\n        xmin = Math.min(xmin, currentValue[0]);\n        xmax = Math.max(xmax, currentValue[0]);\n        ymin = Math.min(ymin, currentValue[1]);\n        ymax = Math.max(ymax, currentValue[1]);\n    }\n    return { x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin };\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity,\n        visible: element.visible, id: element.id,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    // if (txtValue.indexOf('\\n') > -1) {\n                    //     txtValue = txtValue.replace('\\n', '');\n                    // }\n                    var width = bBoxText(txtValue, text);\n                    if ((Math.ceil(width) + 2 >= text.width && txtValue.length > 0) || (txtValue.indexOf('\\n') > -1)) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var bounds1;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[parseInt(j.toString(), 10)].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            bounds1 = bBoxText(words[parseInt(i.toString(), 10)], text);\n            if (bounds1 > text.width && words[parseInt(i.toString(), 10)].length > 0 && text.textWrapping !== 'NoWrap') {\n                if (eachLine.length > 1) {\n                    words[parseInt(i.toString(), 10)] = words[parseInt(i.toString(), 10)] + '\\n';\n                }\n                text.content = words[parseInt(i.toString(), 10)];\n                childNodes = wrapText(text, txtValue, childNodes);\n            }\n            else {\n                txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[parseInt(i.toString(), 10)];\n                newText = txtValue + (words[i + 1] || '');\n                var width = bBoxText(newText, text);\n                if (eachLine.length > 1 && i === words.length - 1) {\n                    txtValue = txtValue + '\\n';\n                }\n                if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                    textValue = txtValue;\n                    childNodes[childNodes.length] = {\n                        text: (txtValue.indexOf('\\n') === -1) ? txtValue + ' ' : textValue, x: 0, dy: 0,\n                        width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                    };\n                    txtValue = '';\n                }\n                else {\n                    if (i === words.length - 1) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n                existingText = newText;\n                existingWidth = width;\n            }\n        }\n    }\n    return childNodes;\n}\nfunction wrapText(txt, textValue, childNode) {\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || txt.content;\n    txtValue = '';\n    txtValue += content[0];\n    for (k = 0; k < content.length; k++) {\n        bounds1 = bBoxText(txtValue, txt);\n        if (bounds1 >= txt.width && txtValue.length > 0) {\n            childNode[childNode.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n            txtValue = '';\n        }\n        else {\n            txtValue = txtValue + (content[k + 1] || '');\n            var width = bBoxText(txtValue, txt);\n            if ((Math.ceil(width) + 2 >= txt.width && txtValue.length > 0) || (txtValue.indexOf('\\n') > -1)) {\n                txtValue = txtValue.slice(0, -1);\n                childNode[childNode.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                txtValue = content[k + 1] || '';\n            }\n            if (k === content.length - 1 && txtValue.length > 0) {\n                childNode[childNode.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                txtValue = '';\n            }\n        }\n    }\n    return childNode;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[parseInt(k.toString(), 10)].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[parseInt(k.toString(), 10)].dy = text.fontSize * 1.2;\n        childNodes[parseInt(k.toString(), 10)].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId && (typeof document !== 'undefined')) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : (typeof document !== 'undefined') ? document.getElementById(elementId) : null;\n    return diagramElement;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[parseInt(i.toString(), 10)], attributes[keys[parseInt(i.toString(), 10)]]);\n    }\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n    var elementcoll;\n    if (diagramElement) {\n        elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n        adornerLayerSvg = elementcoll[0];\n    }\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId, index);\n    if (adornerSvg) {\n        adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    }\n    return adornerLayer;\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        if (typeof document !== 'undefined') {\n            var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n            divElement.appendChild(svg);\n            var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(element);\n            var data = document.createTextNode('');\n            var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n            svg.appendChild(tSpan);\n            // eslint-disable-next-line\n            window[measureElement] = divElement;\n            // eslint-disable-next-line\n            window[measureElement].usageCount = 1;\n            document.body.appendChild(divElement);\n        }\n    }\n    else {\n        // eslint-disable-next-line\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'visible';\n    // eslint-disable-next-line\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getChildNode } from './dom-util';\nimport { Size } from '../primitives/size';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'visible';\n    // eslint-disable-next-line\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n","/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[parseInt(i.toString(), 10)];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[parseInt(j.toString(), 10)], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[parseInt(j.toString(), 10)], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[parseInt(j.toString(), 10)] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[parseInt(j.toString(), 10)] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[parseInt(j.toString(), 10)], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[parseInt(j.toString(), 10)], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[parseInt(j.toString(), 10)], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[parseInt(j.toString(), 10)], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    if (cornerRadius > height / 2) {\n        cornerRadius = height / 2;\n    }\n    if (cornerRadius > width / 2) {\n        cornerRadius = width / 2;\n    }\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        // eslint-disable-next-line\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[parseInt(i.toString(), 10)];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[parseInt(i.toString(), 10)];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[parseInt(i.toString(), 10)] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[parseInt(i.toString(), 10)];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[parseInt(i.toString(), 10)];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[parseInt(i.toString(), 10)] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[parseInt(i.toString(), 10)]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[parseInt(i.toString(), 10)]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","import { Size } from './../primitives/size';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { processPathData, pathSegmentCollection } from '../utility/path-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            // eslint-disable-next-line\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        var pointerEvents = 'pointer-events';\n        if (attr['aria-label'] === '') {\n            // eslint-disable-next-line\n            attr[pointerEvents] = 'none';\n        }\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            fill = style.fill;\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[parseInt(i.toString(), 10)];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[parseInt(i.toString(), 10)], attributes[keys[parseInt(i.toString(), 10)]]);\n    }\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvg(id, width, height) {\n    var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n    return svgObj;\n}\nexport function getParentSvg(element, targetElement, canvas) {\n    if (element && element.id) {\n        if (targetElement && targetElement === 'selector') {\n            return this.pdfViewer.adornerSvgLayer;\n        }\n    }\n    return canvas;\n}\n","import { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { rotatePoint } from './base-util';\n/**\n * Implements the drawing functionalities\n */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\n/** @private */\nexport function findElementUnderMouse(obj, position, padding) {\n    return findTargetElement(obj.wrapper, position, padding);\n}\n/** @private */\nexport function findTargetElement(container, position, padding) {\n    for (var i = container.children.length - 1; i >= 0; i--) {\n        var element = container.children[parseInt(i.toString(), 10)];\n        if (element && element.bounds.containsPoint(position, 0)) {\n            if (element instanceof Container) {\n                var target = this.findTargetElement(element, position);\n                if (target) {\n                    return target;\n                }\n            }\n            if (element.bounds.containsPoint(position, 0)) {\n                return element;\n            }\n        }\n    }\n    if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n        return container;\n    }\n    return null;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            //    scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var RotateTransform;\n(function (RotateTransform) {\n    /** Self - Sets the transform type as Self */\n    RotateTransform[RotateTransform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    RotateTransform[RotateTransform[\"Parent\"] = 2] = \"Parent\";\n})(RotateTransform || (RotateTransform = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    // /**   @private  */\n    // public isEmpty(): boolean {\n    //     return this.height === 0 && this.width === 0;\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    Rect.prototype.intersection = function (rect) {\n        if (this.intersects(rect)) {\n            var left = Math.max(this.left, rect.left);\n            var top_1 = Math.max(this.top, rect.top);\n            var right = Math.min(this.right, rect.right);\n            var bottom = Math.min(this.bottom, rect.bottom);\n            return new Rect(left, top_1, right - left, bottom - top_1);\n        }\n        return Rect.empty;\n    };\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    // public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    // }\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    Rect.prototype.toPoints = function () {\n        var points = [];\n        points.push(this.topLeft);\n        points.push(this.topRight);\n        points.push(this.bottomLeft);\n        points.push(this.bottomRight);\n        return points;\n    };\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.prototype.scale = function (scaleX, scaleY) {\n        this.width *= scaleX;\n        this.height *= scaleY;\n    };\n    Rect.prototype.offset = function (offsetX, offsetY) {\n        this.x += offsetX;\n        this.y += offsetY;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","import { RotateTransform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DrawingElement = /** @class */ (function () {\n    function DrawingElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        this.rotateValue = { x: 0, y: 0, angle: 0 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        /** @private */\n        this.transform = RotateTransform.Self | RotateTransform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        /** @private */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DrawingElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DrawingElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DrawingElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DrawingElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DrawingElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DrawingElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DrawingElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DrawingElement;\n}());\nexport { DrawingElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[parseInt(i.toString(), 10)];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[parseInt(i.toString(), 10)];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DrawingElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 1,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DrawingElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y;\n            x = this.offsetX - desiredSize.width * this.pivot.x;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & RotateTransform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    if (child.rotateValue) {\n                        var rotateValue = {\n                            x: this.offsetX + (child.rotateValue.x || 0),\n                            y: this.offsetY + (child.rotateValue.y || 0)\n                        };\n                        var centerPoint = { x: this.offsetX, y: this.offsetY };\n                        var angle = child.rotateValue.angle | 0;\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n                        center = transformPointByMatrix(matrix, rotateValue);\n                    }\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if ((child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets or gets the print id\n         * @private\n         */\n        _this.printID = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DrawingElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DrawingElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[parseInt(j.toString(), 10)], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        ctx.fillStyle = style.fill;\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[parseInt(i.toString(), 10)];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[parseInt(i.toString(), 10)];\n                    if (child.text !== '\\n') {\n                        var offsetX = position.x + child.x - wrapBounds.x;\n                        var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                        // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        //     child.text = overFlow(child.text, options);\n                        // }\n                        ctx.fillText(child.text, offsetX, offsetY);\n                        if (options.textDecoration === 'Underline'\n                            || options.textDecoration === 'Overline'\n                            || options.textDecoration === 'LineThrough') {\n                            var startPointX = offsetX;\n                            var startPointY = void 0;\n                            var textlength = ctx.measureText(child.text).width;\n                            var endPointX = offsetX + textlength;\n                            var endPointY = void 0;\n                            switch (options.textDecoration) {\n                                case 'Underline':\n                                    startPointY = offsetY + 2;\n                                    endPointY = offsetY + 2;\n                                    break;\n                                case 'Overline':\n                                    startPointY = (position.y + child.dy * i);\n                                    endPointY = (position.y + child.dy * i);\n                                    break;\n                                case 'LineThrough':\n                                    startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                    endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                            }\n                            ctx.beginPath();\n                            ctx.moveTo(startPointX, startPointY);\n                            ctx.lineTo(endPointX, endPointY);\n                            ctx.strokeStyle = options.color;\n                            ctx.lineWidth = options.fontSize * .08;\n                            ctx.globalAlpha = options.opacity;\n                            ctx.stroke();\n                        }\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        ctx.globalAlpha = alignOptions.opacity;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            if (image.complete) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n            else {\n                var transform_1 = ctx.getTransform();\n                image.onload = function () {\n                    ctx.setTransform(transform_1.a, transform_1.b, transform_1.c, transform_1.d, transform_1.e, transform_1.f);\n                    ctx.drawImage(image, x, y, width, height);\n                };\n            }\n        }\n        ctx.closePath();\n    };\n    // text utility\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image;\n        if (window.customStampCollection && window.customStampCollection.get(obj.printID)) {\n            image = window.customStampCollection.get(obj.printID);\n        }\n        else {\n            image = new Image();\n            image.src = obj.source;\n        }\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n    for (var i = 0; i < drawingObjects.length; i++) {\n        renderer.renderElement(drawingObjects[parseInt(i.toString(), 10)], canvas, undefined);\n    }\n}\n","import { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { ImageElement } from '../core/elements/image-element';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DrawingRenderer = /** @class */ (function () {\n    function DrawingRenderer(name, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        // private svgRenderer: SvgRenderer;\n        /** @private */\n        this.isSvgMode = true;\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.isSvgMode = isSvgMode;\n        this.renderer = new CanvasRenderer();\n        //  this.svgRenderer = new SvgRenderer();\n    }\n    // /** @private */\n    // public setLayers(): void {\n    //     this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0] as SVGSVGElement;\n    // }\n    /**   @private  */\n    DrawingRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttrib                                                                           utes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.printID = element.printID;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.id;\n        if (!this.isSvgMode) {\n            options.x = options.x;\n            options.y = options.y;\n        }\n        this.renderer.drawPath(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options);\n        this.renderer.drawText(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        transform = { tx: 0, ty: 0, scale: 1 };\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = parentSvg;\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n            }\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.id;\n        this.renderer.drawRectangle(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity,\n            visible: element.visible, id: element.id, gradient: element.style.gradient,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    return DrawingRenderer;\n}());\nexport { DrawingRenderer };\n"],"names":["identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","x","y","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","rotateMatrix","angle","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","matrix1","matrix2","type2","assignMatrix","mat","getChildNode","node","child","collection","Browser","info","name","i","childNodes","length","parseInt","toString","nodeType","push","children","measurePath","data","path","window","measureElement","style","visibility","element","setAttribute","bounds","getBBox","width","height","currentValue","xmin","xmax","ymin","ymax","currentpath","replace","trim","split","min","max","svgBounds","Rect","wrapSvgText","text","textValue","txtValue","bounds1","k","content","whiteSpace","breakWord","bBoxText","dy","ceil","indexOf","words","newText","existingWidth","existingText","j","wrap","eachLine","textWrapping","txt","childNode","slice","wrapText","floor","wordWrapping","measureText","maxWidth","wrapBounds","Size","options","fill","stroke","strokeColor","rotateAngle","parentTransform","pivotX","pivot","pivotY","strokeWidth","dashArray","strokeDashArray","opacity","visible","id","actualSize","fontSize","fontFamily","textOverflow","textDecoration","doWrap","whiteSpaceToString","wordBreakToString","textAlign","textAlignToString","color","italic","bold","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramElement","elementId","contentId","document","getElementById","querySelector","createHtmlElement","elementType","attribute","createElement","setAttributeHtml","attributes","keys","Object","getAdornerLayerSvg","diagramId","index","adornerLayerSvg","diagramElement","getElementsByClassName","measureImage","source","contentSize","imageElement","getBoundingClientRect","cornersPointsBeforeRotation","ele","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","toBounds","rotateSize","size","minX","minY","maxX","maxY","getBounds","corners","middleLeft","topCenter","bottomCenter","middleRight","center","value","state","textContent","bBox","rotatePoint","getOffset","obj","desiredSize","processPathData","arrayCollection","parsePathData","ob","char","toLowerCase","command","x1","y1","x2","y2","r1","r2","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","point2","next","points","corner","pathSegmentCollection","x0","y0","segments","seg","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","setAttributeSvg","svg","createSvgElement","createElementNS","findTargetElement","container","position","padding","containsPoint","Container","target","this","intersect3","lineUtil1","lineUtil2","l1","l2","d","na","nb","enabled","intersectPt","ua","ub","getLineSegment","scaleElement","sw","sh","refObject","refPoint","_i","_a","newPosition","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","_super","apply","Property","ChildProperty","Stop","getClassName","Gradient","Collection","ShapeStyle","ComplexFactory","StrokeStyle","TextStyle","RotateTransform","ElementAction","ConnectorConstraints","ThumbsConstraints","SelectorConstraints","NoOfSegments","clone","MAX_VALUE","get","enumerable","configurable","equals","rect1","rect2","uniteRect","rect","NaN","unitePoint","intersection","intersects","top_1","empty","Inflate","containsRect","toPoints","points_1","scale","scaleX","scaleY","offset","MIN_VALUE","DrawingElement","rotateValue","isDirt","minHeight","minWidth","maxHeight","horizontalAlignment","verticalAlignment","margin","relativeMode","transform","Self","Parent","preventContainer","staticSize","isRectElement","isCalculateDesiredSize","elementActions","None","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","mode","getAbsolutePosition","set","measure","availableSize","validateDesiredSize","arrange","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","findChildOffsetFromCenter","childSize","TextElement","call","canMeasure","canConsiderBounds","textNodes","textWrapBounds","refreshTextElement","Canvas","leftMargin","topMargin","outerBounds","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","centerPoint","parentSize","ImageElement","imageSource","printID","imageScale","imageAlign","stretch","PathElement","pathData","absolutePath","canMeasurePath","absoluteBounds","updatePath","newPathString","Point","point1","isEmptyPoint","PI","findLength","e","sqrt","pow","findAngle","atan2","distancePoints","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","direction","abs","CanvasRenderer","getContext","canvas","setStyle","ctx","strokeStyle","lineWidth","globalAlpha","parseDashArray","setLineDash","fillStyle","rotateContext","translate","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","save","beginPath","fillRect","closePath","restore","renderPath","length_1","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","isNaN","cpp","centp","a1","a","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","m","acos","getMeetOffset","arg","res","dest","getSliceOffset","src","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","xalign","substr","yalign","sWidth","sHeight","dWidth","dHeight","canvas1","drawImage","srcRatio","destRatio","complete","transform_1","getTransform","onload","setTransform","f","loadImage","customStampCollection","Image","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","labelX","labelY","pointx","pointy","DrawingRenderer","isSvgMode","renderer","renderElement","htmlLayer","createParent","indexValue","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderRect","getBaseAttributes","imageWidth","imageHeight","sourceWidth","sourceHeight","contentWidth","contentHeight","widthRatio","heightRatio","ratio","group","tx","ty","gradient","SvgRenderer","onlyRect","isSelector","ariaLabel","appendChild","attr","aria-label","class","setSvgStyle","updateSelectionRegion","gElement","parentNode","createGElement","drawCircle","enableSelector","circle","classval","cx","cy","radius","display","canApplyStyle","svgLabelAlign","wrapBound","pos","pointX","pointY","drawLine","line","startPoint","endPoint","stroke-width","random","shadowElement","removeChild","transformedPoints","createScaling","drawingObjects","svgObj","targetElement","pdfViewer","adornerSvgLayer","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","wrapper","start1","end1","start2","end2","line3","tar","changedObject","textElement","mousePosition","w","h","cornerPoint","trans","translatedPts","adornerLayer","adornerSvg","usageCount","divElement","createTextNode","tSpan","setAttributeNS","body"],"mappings":"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"}